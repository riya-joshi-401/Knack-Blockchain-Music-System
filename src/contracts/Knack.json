{
  "contractName": "Knack",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "artistName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "listenerName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "artistDonated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "songID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "songName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "artistName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "songAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "songID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "songName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "listenerName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "songPurchased",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getNumSongs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "checkUser",
      "outputs": [
        {
          "internalType": "enum Knack.UserType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "addNewListener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "addNewArtist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListenerDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getArtistDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_genre",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "addSong",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_songID",
          "type": "uint256"
        }
      ],
      "name": "buySong",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "artistName",
          "type": "string"
        }
      ],
      "name": "donateArtist",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_songID",
          "type": "uint256"
        }
      ],
      "name": "getSongDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"artistName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"listenerName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"artistDonated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"songID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"songName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"artistName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"songAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"songID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"songName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"listenerName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"songPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"addNewArtist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"addNewListener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_genre\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"addSong\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_songID\",\"type\":\"uint256\"}],\"name\":\"buySong\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkUser\",\"outputs\":[{\"internalType\":\"enum Knack.UserType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artistName\",\"type\":\"string\"}],\"name\":\"donateArtist\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getArtistDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListenerDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumSongs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_songID\",\"type\":\"uint256\"}],\"name\":\"getSongDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Knack.sol\":\"Knack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Knack.sol\":{\"keccak256\":\"0xae63069d9c5dbe9e0ca3924ae1a9218203bbe8e7c8c9a0b06b656e4b8bfeec24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100406ff9f59f1b5d51aaa292b4ea7df8863cfe82b94c9f79d231677c68d90a8\",\"dweb:/ipfs/QmZt6Ft5y1zZ7wAkhescxS3QssD5e5YM3qs12uF8K4LvEJ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506000600281905550600060018190555060008081905550612579806100376000396000f3fe6080604052600436106100915760003560e01c806377822fc21161005957806377822fc21461015c5780637f7a45101461019e578063c1562547146101cb578063dc4b0291146101f6578063f29b41651461021257610091565b80630c58d5b11461009657806342490c4b146100c15780634effb50e146100ea578063606a01751461011757806362efa5f014610133575b600080fd5b3480156100a257600080fd5b506100ab61023b565b6040516100b891906119f1565b60405180910390f35b3480156100cd57600080fd5b506100e860048036038101906100e39190611b66565b610245565b005b3480156100f657600080fd5b506100ff6103cb565b60405161010e93929190611cf5565b60405180910390f35b610131600480360381019061012c9190611d66565b610581565b005b34801561013f57600080fd5b5061015a60048036038101906101559190611b66565b610c28565b005b34801561016857600080fd5b50610183600480360381019061017e9190611d66565b610d14565b60405161019596959493929190611d93565b60405180910390f35b3480156101aa57600080fd5b506101b3610fe5565b6040516101c293929190611cf5565b60405180910390f35b3480156101d757600080fd5b506101e061119b565b6040516101ed9190611e87565b60405180910390f35b610210600480360381019061020b9190611b66565b6111ef565b005b34801561021e57600080fd5b5061023960048036038101906102349190611ea2565b6113fe565b005b6000600254905090565b60018060008282546102579190611f8c565b92505081905550610266611874565b8181600001819052506001548160200181815250503360098360405161028c919061201e565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610334929190611895565b5060208201518160010155604082015181600201908051906020019061035b92919061191b565b509050506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360028111156103c2576103c1611e10565b5b02179055505050565b606060006060600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018280546104a490612064565b80601f01602080910402602001604051908101604052809291908181526020018280546104d090612064565b801561051d5780601f106104f25761010080835404028352916020019161051d565b820191906000526020600020905b81548152906001019060200180831161050057829003601f168201915b505050505092508080548060200260200160405190810160405280929190818152602001828054801561056f57602002820191906000526020600020905b81548152602001906001019080831161055b575b50505050509050925092509250909192565b60028081111561059457610593611e10565b5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660028111156105f3576105f2611e10565b5b14610633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062a906120e1565b60405180910390fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600082815260200190815260200160002060009054906101000a900460ff16156106d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cb9061214d565b60405180910390fd5b6000600660008381526020019081526020016000206040518060e001604052908160008201805461070490612064565b80601f016020809104026020016040519081016040528092919081815260200182805461073090612064565b801561077d5780601f106107525761010080835404028352916020019161077d565b820191906000526020600020905b81548152906001019060200180831161076057829003601f168201915b5050505050815260200160018201805461079690612064565b80601f01602080910402602001604051908101604052809291908181526020018280546107c290612064565b801561080f5780601f106107e45761010080835404028352916020019161080f565b820191906000526020600020905b8154815290600101906020018083116107f257829003601f168201915b5050505050815260200160028201805461082890612064565b80601f016020809104026020016040519081016040528092919081815260200182805461085490612064565b80156108a15780601f10610876576101008083540402835291602001916108a1565b820191906000526020600020905b81548152906001019060200180831161088457829003601f168201915b505050505081526020016003820180546108ba90612064565b80601f01602080910402602001604051908101604052809291908181526020018280546108e690612064565b80156109335780601f1061090857610100808354040283529160200191610933565b820191906000526020600020905b81548152906001019060200180831161091657829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060018160a001516109b9919061216d565b34146109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190612239565b60405180910390fd5b343373ffffffffffffffffffffffffffffffffffffffff163111610a53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4a906122a5565b60405180910390fd5b8060c0015173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610a9d573d6000803e3d6000fd5b506001600760008481526020019081526020016000206000828254610ac29190611f8c565b92505081905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018290806001815401808255809150506001900390600052602060002001600090919091909150556001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600084815260200190815260200160002060006101000a81548160ff0219169083151502179055507f4d5d3c0b738fd8f4b26fa11966a64c4b072cb5837aadaf02808df71f883a5d5181608001518260000151600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000134604051610c1c949392919061235a565b60405180910390a15050565b6001600080828254610c3a9190611f8c565b925050819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905081816000019080519060200190610c9c929190611895565b5060005481600101819055506002600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836002811115610d0b57610d0a611e10565b5b02179055505050565b6060806060806000806006600088815260200190815260200160002060000160066000898152602001908152602001600020600101600660008a8152602001908152602001600020600201600660008b8152602001908152602001600020600301600660008c815260200190815260200160002060050154600760008d815260200190815260200160002054858054610dac90612064565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd890612064565b8015610e255780601f10610dfa57610100808354040283529160200191610e25565b820191906000526020600020905b815481529060010190602001808311610e0857829003601f168201915b50505050509550848054610e3890612064565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6490612064565b8015610eb15780601f10610e8657610100808354040283529160200191610eb1565b820191906000526020600020905b815481529060010190602001808311610e9457829003601f168201915b50505050509450838054610ec490612064565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef090612064565b8015610f3d5780601f10610f1257610100808354040283529160200191610f3d565b820191906000526020600020905b815481529060010190602001808311610f2057829003601f168201915b50505050509350828054610f5090612064565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7c90612064565b8015610fc95780601f10610f9e57610100808354040283529160200191610fc9565b820191906000526020600020905b815481529060010190602001808311610fac57829003601f168201915b5050505050925095509550955095509550955091939550919395565b606060006060600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018280546110be90612064565b80601f01602080910402602001604051908101604052809291908181526020018280546110ea90612064565b80156111375780601f1061110c57610100808354040283529160200191611137565b820191906000526020600020905b81548152906001019060200180831161111a57829003601f168201915b505050505092508080548060200260200160405190810160405280929190818152602001828054801561118957602002820191906000526020600020905b815481526020019060010190808311611175575b50505050509050925092509250909192565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b60028081111561120257611201611e10565b5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600281111561126157611260611e10565b5b146112a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611298906120e1565b60405180910390fd5b343373ffffffffffffffffffffffffffffffffffffffff1631116112fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f1906122a5565b60405180910390fd5b60098160405161130a919061201e565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561137e573d6000803e3d6000fd5b507f19fc7073cff31b76fe0bf3c801e7fe11652310c62d0c225a9995a5d30940c64881600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001346040516113f3939291906123ad565b60405180910390a150565b6001600281111561141257611411611e10565b5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600281111561147157611470611e10565b5b146114b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a89061243e565b60405180910390fd5b6008826040516114c1919061201e565b908152602001604051809103902060009054906101000a900460ff161561151d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611514906124d0565b60405180910390fd5b6001600260008282546115309190611f8c565b9250508190555061153f611968565b600254816080018181525050848160000181905250600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546115a190612064565b80601f01602080910402602001604051908101604052809291908181526020018280546115cd90612064565b801561161a5780601f106115ef5761010080835404028352916020019161161a565b820191906000526020600020905b8154815290600101906020018083116115fd57829003601f168201915b50505050508160200181905250838160400181905250828160600181905250818160a0018181525050338160c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000600760006002548152602001908152602001600020819055508060066000600254815260200190815260200160002060008201518160000190805190602001906116c8929190611895565b5060208201518160010190805190602001906116e5929190611895565b506040820151816002019080519060200190611702929190611895565b50606082015181600301908051906020019061171f929190611895565b506080820151816004015560a0820151816005015560c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600254908060018154018082558091505060019003906000526020600020016000909190919091505560016008846040516117fb919061201e565b908152602001604051809103902060006101000a81548160ff0219169083151502179055507f8c6d5283b06a4f84805865678e0a51043ab4788bdd609db7c5cbe4c6fce5c97f8160800151826000015183602001518460a0015160405161186594939291906124f0565b60405180910390a15050505050565b60405180606001604052806060815260200160008152602001606081525090565b8280546118a190612064565b90600052602060002090601f0160209004810192826118c3576000855561190a565b82601f106118dc57805160ff191683800117855561190a565b8280016001018555821561190a579182015b828111156119095782518255916020019190600101906118ee565b5b50905061191791906119bb565b5090565b828054828255906000526020600020908101928215611957579160200282015b8281111561195657825182559160200191906001019061193b565b5b50905061196491906119bb565b5090565b6040518060e00160405280606081526020016060815260200160608152602001606081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b808211156119d45760008160009055506001016119bc565b5090565b6000819050919050565b6119eb816119d8565b82525050565b6000602082019050611a0660008301846119e2565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a7382611a2a565b810181811067ffffffffffffffff82111715611a9257611a91611a3b565b5b80604052505050565b6000611aa5611a0c565b9050611ab18282611a6a565b919050565b600067ffffffffffffffff821115611ad157611ad0611a3b565b5b611ada82611a2a565b9050602081019050919050565b82818337600083830152505050565b6000611b09611b0484611ab6565b611a9b565b905082815260208101848484011115611b2557611b24611a25565b5b611b30848285611ae7565b509392505050565b600082601f830112611b4d57611b4c611a20565b5b8135611b5d848260208601611af6565b91505092915050565b600060208284031215611b7c57611b7b611a16565b5b600082013567ffffffffffffffff811115611b9a57611b99611a1b565b5b611ba684828501611b38565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611be9578082015181840152602081019050611bce565b83811115611bf8576000848401525b50505050565b6000611c0982611baf565b611c138185611bba565b9350611c23818560208601611bcb565b611c2c81611a2a565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611c6c816119d8565b82525050565b6000611c7e8383611c63565b60208301905092915050565b6000602082019050919050565b6000611ca282611c37565b611cac8185611c42565b9350611cb783611c53565b8060005b83811015611ce8578151611ccf8882611c72565b9750611cda83611c8a565b925050600181019050611cbb565b5085935050505092915050565b60006060820190508181036000830152611d0f8186611bfe565b9050611d1e60208301856119e2565b8181036040830152611d308184611c97565b9050949350505050565b611d43816119d8565b8114611d4e57600080fd5b50565b600081359050611d6081611d3a565b92915050565b600060208284031215611d7c57611d7b611a16565b5b6000611d8a84828501611d51565b91505092915050565b600060c0820190508181036000830152611dad8189611bfe565b90508181036020830152611dc18188611bfe565b90508181036040830152611dd58187611bfe565b90508181036060830152611de98186611bfe565b9050611df860808301856119e2565b611e0560a08301846119e2565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110611e5057611e4f611e10565b5b50565b6000819050611e6182611e3f565b919050565b6000611e7182611e53565b9050919050565b611e8181611e66565b82525050565b6000602082019050611e9c6000830184611e78565b92915050565b60008060008060808587031215611ebc57611ebb611a16565b5b600085013567ffffffffffffffff811115611eda57611ed9611a1b565b5b611ee687828801611b38565b945050602085013567ffffffffffffffff811115611f0757611f06611a1b565b5b611f1387828801611b38565b935050604085013567ffffffffffffffff811115611f3457611f33611a1b565b5b611f4087828801611b38565b9250506060611f5187828801611d51565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f97826119d8565b9150611fa2836119d8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611fd757611fd6611f5d565b5b828201905092915050565b600081905092915050565b6000611ff882611baf565b6120028185611fe2565b9350612012818560208601611bcb565b80840191505092915050565b600061202a8284611fed565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061207c57607f821691505b60208210810361208f5761208e612035565b5b50919050565b7f4e6f742061206c697374656e65722070726f66696c652e000000000000000000600082015250565b60006120cb601783611bba565b91506120d682612095565b602082019050919050565b600060208201905081810360008301526120fa816120be565b9050919050565b7f536f6e6720616c7265616479207075726368617365642e000000000000000000600082015250565b6000612137601783611bba565b915061214282612101565b602082019050919050565b600060208201905081810360008301526121668161212a565b9050919050565b6000612178826119d8565b9150612183836119d8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156121bc576121bb611f5d565b5b828202905092915050565b7f416d6f756e7420706179656420646f6573206e6f74206d61746368207072696360008201527f65206f662074686520736f6e672e000000000000000000000000000000000000602082015250565b6000612223602e83611bba565b915061222e826121c7565b604082019050919050565b6000602082019050818103600083015261225281612216565b9050919050565b7f496e73756666696369656e742062616c616e636520746f2070726f636565642e600082015250565b600061228f602083611bba565b915061229a82612259565b602082019050919050565b600060208201905081810360008301526122be81612282565b9050919050565b60008190508160005260206000209050919050565b600081546122e781612064565b6122f18186611bba565b9450600182166000811461230c576001811461231e57612351565b60ff1983168652602086019350612351565b612327856122c5565b60005b838110156123495781548189015260018201915060208101905061232a565b808801955050505b50505092915050565b600060808201905061236f60008301876119e2565b81810360208301526123818186611bfe565b9050818103604083015261239581856122da565b90506123a460608301846119e2565b95945050505050565b600060608201905081810360008301526123c78186611bfe565b905081810360208301526123db81856122da565b90506123ea60408301846119e2565b949350505050565b7f4e6f7420616e206172746973742e000000000000000000000000000000000000600082015250565b6000612428600e83611bba565b9150612433826123f2565b602082019050919050565b600060208201905081810360008301526124578161241b565b9050919050565b7f4475706c6963617465206861736820686173206265656e20646574656374656460008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006124ba602183611bba565b91506124c58261245e565b604082019050919050565b600060208201905081810360008301526124e9816124ad565b9050919050565b600060808201905061250560008301876119e2565b81810360208301526125178186611bfe565b9050818103604083015261252b8185611bfe565b905061253a60608301846119e2565b9594505050505056fea2646970667358221220f25617fc54f576e40c85a45a54eb64a5c416a6a600f8a74e91bd7492773bf21b64736f6c634300080d0033",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c806377822fc21161005957806377822fc21461015c5780637f7a45101461019e578063c1562547146101cb578063dc4b0291146101f6578063f29b41651461021257610091565b80630c58d5b11461009657806342490c4b146100c15780634effb50e146100ea578063606a01751461011757806362efa5f014610133575b600080fd5b3480156100a257600080fd5b506100ab61023b565b6040516100b891906119f1565b60405180910390f35b3480156100cd57600080fd5b506100e860048036038101906100e39190611b66565b610245565b005b3480156100f657600080fd5b506100ff6103cb565b60405161010e93929190611cf5565b60405180910390f35b610131600480360381019061012c9190611d66565b610581565b005b34801561013f57600080fd5b5061015a60048036038101906101559190611b66565b610c28565b005b34801561016857600080fd5b50610183600480360381019061017e9190611d66565b610d14565b60405161019596959493929190611d93565b60405180910390f35b3480156101aa57600080fd5b506101b3610fe5565b6040516101c293929190611cf5565b60405180910390f35b3480156101d757600080fd5b506101e061119b565b6040516101ed9190611e87565b60405180910390f35b610210600480360381019061020b9190611b66565b6111ef565b005b34801561021e57600080fd5b5061023960048036038101906102349190611ea2565b6113fe565b005b6000600254905090565b60018060008282546102579190611f8c565b92505081905550610266611874565b8181600001819052506001548160200181815250503360098360405161028c919061201e565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610334929190611895565b5060208201518160010155604082015181600201908051906020019061035b92919061191b565b509050506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360028111156103c2576103c1611e10565b5b02179055505050565b606060006060600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018280546104a490612064565b80601f01602080910402602001604051908101604052809291908181526020018280546104d090612064565b801561051d5780601f106104f25761010080835404028352916020019161051d565b820191906000526020600020905b81548152906001019060200180831161050057829003601f168201915b505050505092508080548060200260200160405190810160405280929190818152602001828054801561056f57602002820191906000526020600020905b81548152602001906001019080831161055b575b50505050509050925092509250909192565b60028081111561059457610593611e10565b5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660028111156105f3576105f2611e10565b5b14610633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062a906120e1565b60405180910390fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600082815260200190815260200160002060009054906101000a900460ff16156106d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cb9061214d565b60405180910390fd5b6000600660008381526020019081526020016000206040518060e001604052908160008201805461070490612064565b80601f016020809104026020016040519081016040528092919081815260200182805461073090612064565b801561077d5780601f106107525761010080835404028352916020019161077d565b820191906000526020600020905b81548152906001019060200180831161076057829003601f168201915b5050505050815260200160018201805461079690612064565b80601f01602080910402602001604051908101604052809291908181526020018280546107c290612064565b801561080f5780601f106107e45761010080835404028352916020019161080f565b820191906000526020600020905b8154815290600101906020018083116107f257829003601f168201915b5050505050815260200160028201805461082890612064565b80601f016020809104026020016040519081016040528092919081815260200182805461085490612064565b80156108a15780601f10610876576101008083540402835291602001916108a1565b820191906000526020600020905b81548152906001019060200180831161088457829003601f168201915b505050505081526020016003820180546108ba90612064565b80601f01602080910402602001604051908101604052809291908181526020018280546108e690612064565b80156109335780601f1061090857610100808354040283529160200191610933565b820191906000526020600020905b81548152906001019060200180831161091657829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060018160a001516109b9919061216d565b34146109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190612239565b60405180910390fd5b343373ffffffffffffffffffffffffffffffffffffffff163111610a53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4a906122a5565b60405180910390fd5b8060c0015173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610a9d573d6000803e3d6000fd5b506001600760008481526020019081526020016000206000828254610ac29190611f8c565b92505081905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018290806001815401808255809150506001900390600052602060002001600090919091909150556001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600084815260200190815260200160002060006101000a81548160ff0219169083151502179055507f4d5d3c0b738fd8f4b26fa11966a64c4b072cb5837aadaf02808df71f883a5d5181608001518260000151600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000134604051610c1c949392919061235a565b60405180910390a15050565b6001600080828254610c3a9190611f8c565b925050819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905081816000019080519060200190610c9c929190611895565b5060005481600101819055506002600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836002811115610d0b57610d0a611e10565b5b02179055505050565b6060806060806000806006600088815260200190815260200160002060000160066000898152602001908152602001600020600101600660008a8152602001908152602001600020600201600660008b8152602001908152602001600020600301600660008c815260200190815260200160002060050154600760008d815260200190815260200160002054858054610dac90612064565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd890612064565b8015610e255780601f10610dfa57610100808354040283529160200191610e25565b820191906000526020600020905b815481529060010190602001808311610e0857829003601f168201915b50505050509550848054610e3890612064565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6490612064565b8015610eb15780601f10610e8657610100808354040283529160200191610eb1565b820191906000526020600020905b815481529060010190602001808311610e9457829003601f168201915b50505050509450838054610ec490612064565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef090612064565b8015610f3d5780601f10610f1257610100808354040283529160200191610f3d565b820191906000526020600020905b815481529060010190602001808311610f2057829003601f168201915b50505050509350828054610f5090612064565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7c90612064565b8015610fc95780601f10610f9e57610100808354040283529160200191610fc9565b820191906000526020600020905b815481529060010190602001808311610fac57829003601f168201915b5050505050925095509550955095509550955091939550919395565b606060006060600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018280546110be90612064565b80601f01602080910402602001604051908101604052809291908181526020018280546110ea90612064565b80156111375780601f1061110c57610100808354040283529160200191611137565b820191906000526020600020905b81548152906001019060200180831161111a57829003601f168201915b505050505092508080548060200260200160405190810160405280929190818152602001828054801561118957602002820191906000526020600020905b815481526020019060010190808311611175575b50505050509050925092509250909192565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b60028081111561120257611201611e10565b5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600281111561126157611260611e10565b5b146112a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611298906120e1565b60405180910390fd5b343373ffffffffffffffffffffffffffffffffffffffff1631116112fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f1906122a5565b60405180910390fd5b60098160405161130a919061201e565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561137e573d6000803e3d6000fd5b507f19fc7073cff31b76fe0bf3c801e7fe11652310c62d0c225a9995a5d30940c64881600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001346040516113f3939291906123ad565b60405180910390a150565b6001600281111561141257611411611e10565b5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600281111561147157611470611e10565b5b146114b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a89061243e565b60405180910390fd5b6008826040516114c1919061201e565b908152602001604051809103902060009054906101000a900460ff161561151d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611514906124d0565b60405180910390fd5b6001600260008282546115309190611f8c565b9250508190555061153f611968565b600254816080018181525050848160000181905250600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546115a190612064565b80601f01602080910402602001604051908101604052809291908181526020018280546115cd90612064565b801561161a5780601f106115ef5761010080835404028352916020019161161a565b820191906000526020600020905b8154815290600101906020018083116115fd57829003601f168201915b50505050508160200181905250838160400181905250828160600181905250818160a0018181525050338160c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000600760006002548152602001908152602001600020819055508060066000600254815260200190815260200160002060008201518160000190805190602001906116c8929190611895565b5060208201518160010190805190602001906116e5929190611895565b506040820151816002019080519060200190611702929190611895565b50606082015181600301908051906020019061171f929190611895565b506080820151816004015560a0820151816005015560c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600254908060018154018082558091505060019003906000526020600020016000909190919091505560016008846040516117fb919061201e565b908152602001604051809103902060006101000a81548160ff0219169083151502179055507f8c6d5283b06a4f84805865678e0a51043ab4788bdd609db7c5cbe4c6fce5c97f8160800151826000015183602001518460a0015160405161186594939291906124f0565b60405180910390a15050505050565b60405180606001604052806060815260200160008152602001606081525090565b8280546118a190612064565b90600052602060002090601f0160209004810192826118c3576000855561190a565b82601f106118dc57805160ff191683800117855561190a565b8280016001018555821561190a579182015b828111156119095782518255916020019190600101906118ee565b5b50905061191791906119bb565b5090565b828054828255906000526020600020908101928215611957579160200282015b8281111561195657825182559160200191906001019061193b565b5b50905061196491906119bb565b5090565b6040518060e00160405280606081526020016060815260200160608152602001606081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b808211156119d45760008160009055506001016119bc565b5090565b6000819050919050565b6119eb816119d8565b82525050565b6000602082019050611a0660008301846119e2565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a7382611a2a565b810181811067ffffffffffffffff82111715611a9257611a91611a3b565b5b80604052505050565b6000611aa5611a0c565b9050611ab18282611a6a565b919050565b600067ffffffffffffffff821115611ad157611ad0611a3b565b5b611ada82611a2a565b9050602081019050919050565b82818337600083830152505050565b6000611b09611b0484611ab6565b611a9b565b905082815260208101848484011115611b2557611b24611a25565b5b611b30848285611ae7565b509392505050565b600082601f830112611b4d57611b4c611a20565b5b8135611b5d848260208601611af6565b91505092915050565b600060208284031215611b7c57611b7b611a16565b5b600082013567ffffffffffffffff811115611b9a57611b99611a1b565b5b611ba684828501611b38565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611be9578082015181840152602081019050611bce565b83811115611bf8576000848401525b50505050565b6000611c0982611baf565b611c138185611bba565b9350611c23818560208601611bcb565b611c2c81611a2a565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611c6c816119d8565b82525050565b6000611c7e8383611c63565b60208301905092915050565b6000602082019050919050565b6000611ca282611c37565b611cac8185611c42565b9350611cb783611c53565b8060005b83811015611ce8578151611ccf8882611c72565b9750611cda83611c8a565b925050600181019050611cbb565b5085935050505092915050565b60006060820190508181036000830152611d0f8186611bfe565b9050611d1e60208301856119e2565b8181036040830152611d308184611c97565b9050949350505050565b611d43816119d8565b8114611d4e57600080fd5b50565b600081359050611d6081611d3a565b92915050565b600060208284031215611d7c57611d7b611a16565b5b6000611d8a84828501611d51565b91505092915050565b600060c0820190508181036000830152611dad8189611bfe565b90508181036020830152611dc18188611bfe565b90508181036040830152611dd58187611bfe565b90508181036060830152611de98186611bfe565b9050611df860808301856119e2565b611e0560a08301846119e2565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110611e5057611e4f611e10565b5b50565b6000819050611e6182611e3f565b919050565b6000611e7182611e53565b9050919050565b611e8181611e66565b82525050565b6000602082019050611e9c6000830184611e78565b92915050565b60008060008060808587031215611ebc57611ebb611a16565b5b600085013567ffffffffffffffff811115611eda57611ed9611a1b565b5b611ee687828801611b38565b945050602085013567ffffffffffffffff811115611f0757611f06611a1b565b5b611f1387828801611b38565b935050604085013567ffffffffffffffff811115611f3457611f33611a1b565b5b611f4087828801611b38565b9250506060611f5187828801611d51565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f97826119d8565b9150611fa2836119d8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611fd757611fd6611f5d565b5b828201905092915050565b600081905092915050565b6000611ff882611baf565b6120028185611fe2565b9350612012818560208601611bcb565b80840191505092915050565b600061202a8284611fed565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061207c57607f821691505b60208210810361208f5761208e612035565b5b50919050565b7f4e6f742061206c697374656e65722070726f66696c652e000000000000000000600082015250565b60006120cb601783611bba565b91506120d682612095565b602082019050919050565b600060208201905081810360008301526120fa816120be565b9050919050565b7f536f6e6720616c7265616479207075726368617365642e000000000000000000600082015250565b6000612137601783611bba565b915061214282612101565b602082019050919050565b600060208201905081810360008301526121668161212a565b9050919050565b6000612178826119d8565b9150612183836119d8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156121bc576121bb611f5d565b5b828202905092915050565b7f416d6f756e7420706179656420646f6573206e6f74206d61746368207072696360008201527f65206f662074686520736f6e672e000000000000000000000000000000000000602082015250565b6000612223602e83611bba565b915061222e826121c7565b604082019050919050565b6000602082019050818103600083015261225281612216565b9050919050565b7f496e73756666696369656e742062616c616e636520746f2070726f636565642e600082015250565b600061228f602083611bba565b915061229a82612259565b602082019050919050565b600060208201905081810360008301526122be81612282565b9050919050565b60008190508160005260206000209050919050565b600081546122e781612064565b6122f18186611bba565b9450600182166000811461230c576001811461231e57612351565b60ff1983168652602086019350612351565b612327856122c5565b60005b838110156123495781548189015260018201915060208101905061232a565b808801955050505b50505092915050565b600060808201905061236f60008301876119e2565b81810360208301526123818186611bfe565b9050818103604083015261239581856122da565b90506123a460608301846119e2565b95945050505050565b600060608201905081810360008301526123c78186611bfe565b905081810360208301526123db81856122da565b90506123ea60408301846119e2565b949350505050565b7f4e6f7420616e206172746973742e000000000000000000000000000000000000600082015250565b6000612428600e83611bba565b9150612433826123f2565b602082019050919050565b600060208201905081810360008301526124578161241b565b9050919050565b7f4475706c6963617465206861736820686173206265656e20646574656374656460008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006124ba602183611bba565b91506124c58261245e565b604082019050919050565b600060208201905081810360008301526124e9816124ad565b9050919050565b600060808201905061250560008301876119e2565b81810360208301526125178186611bfe565b9050818103604083015261252b8185611bfe565b905061253a60608301846119e2565b9594505050505056fea2646970667358221220f25617fc54f576e40c85a45a54eb64a5c416a6a600f8a74e91bd7492773bf21b64736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:22056:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:2",
                "type": ""
              }
            ],
            "src": "7:77:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:2"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:2",
                "type": ""
              }
            ],
            "src": "90:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:2",
                "type": ""
              }
            ],
            "src": "214:222:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:35:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:19:2",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "492:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "475:6:2",
                "type": ""
              }
            ],
            "src": "442:75:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "629:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "622:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "622:12:2"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "523:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "752:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "755:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "745:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "745:12:2"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "646:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "858:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "875:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "878:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "868:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "868:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "868:12:2"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "769:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "981:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "998:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1001:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "991:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "991:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "991:12:2"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "892:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1063:54:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1073:38:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1091:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1098:2:2",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1087:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1087:14:2"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1107:2:2",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1103:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1103:7:2"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1083:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1083:28:2"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "1073:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1046:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "1056:6:2",
                "type": ""
              }
            ],
            "src": "1015:102:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1151:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1168:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1171:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1161:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1161:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1161:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1265:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1268:4:2",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1258:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1258:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1258:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1289:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1292:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1282:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1282:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1282:15:2"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1123:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1352:238:2",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1362:58:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1384:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "1414:4:2"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "1392:21:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1392:27:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1380:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1380:40:2"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1366:10:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1531:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1533:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1533:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1533:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1474:10:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1486:18:2",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1471:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1471:34:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1510:10:2"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1522:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1507:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1507:22:2"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1468:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1468:62:2"
                  },
                  "nodeType": "YulIf",
                  "src": "1465:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1569:2:2",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1573:10:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1562:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1562:22:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1562:22:2"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1338:6:2",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1346:4:2",
                "type": ""
              }
            ],
            "src": "1309:281:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1637:88:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1647:30:2",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "1657:18:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1657:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1647:6:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1706:6:2"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "1714:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "1686:19:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1686:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1686:33:2"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1621:4:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1630:6:2",
                "type": ""
              }
            ],
            "src": "1596:129:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1798:241:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1903:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1905:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1905:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1905:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1875:6:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1883:18:2",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1872:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1872:30:2"
                  },
                  "nodeType": "YulIf",
                  "src": "1869:56:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1935:37:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1965:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "1943:21:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1943:29:2"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "1935:4:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2009:23:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "2021:4:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2027:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2017:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2017:15:2"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "2009:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1782:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1793:4:2",
                "type": ""
              }
            ],
            "src": "1731:308:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2096:103:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "2119:3:2"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "2124:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2129:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2106:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2106:30:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2106:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "2177:3:2"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2182:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2173:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2173:16:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2191:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2166:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2166:27:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2166:27:2"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2078:3:2",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "2083:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2088:6:2",
                "type": ""
              }
            ],
            "src": "2045:154:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2289:328:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2299:75:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2366:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2324:41:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2324:49:2"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2308:15:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2308:66:2"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2299:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2390:5:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2397:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2383:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2383:21:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2383:21:2"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2413:27:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2428:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2435:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2424:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2424:16:2"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "2417:3:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2478:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "2480:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2480:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2480:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "2459:3:2"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2464:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2455:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2455:16:2"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2473:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2452:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2452:25:2"
                  },
                  "nodeType": "YulIf",
                  "src": "2449:112:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "2594:3:2"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "2599:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2604:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2570:23:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2570:41:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2570:41:2"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2262:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2267:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2275:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2283:5:2",
                "type": ""
              }
            ],
            "src": "2205:412:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2699:278:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2748:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "2750:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2750:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2750:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2727:6:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2735:4:2",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2723:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2723:17:2"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2742:3:2"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2719:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2719:27:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2712:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2712:35:2"
                  },
                  "nodeType": "YulIf",
                  "src": "2709:122:2"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2840:34:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2867:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2854:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2854:20:2"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2844:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2883:88:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2944:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2952:4:2",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2940:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2940:17:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2959:6:2"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2967:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2892:47:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2892:79:2"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2883:5:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2677:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2685:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2693:5:2",
                "type": ""
              }
            ],
            "src": "2637:340:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3059:433:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3105:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3107:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3107:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3107:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3080:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3089:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3076:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3076:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3101:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3072:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3072:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "3069:119:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3198:287:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3213:45:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3244:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3255:1:2",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3240:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3240:17:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3227:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3227:31:2"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3217:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3305:83:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "3307:77:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3307:79:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3307:79:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3277:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3285:18:2",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3274:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3274:30:2"
                      },
                      "nodeType": "YulIf",
                      "src": "3271:117:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3402:73:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3447:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3458:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3443:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3443:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3467:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3412:30:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3412:63:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3402:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3029:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3040:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3052:6:2",
                "type": ""
              }
            ],
            "src": "2983:509:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3557:40:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3568:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3584:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3578:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3578:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3568:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3540:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3550:6:2",
                "type": ""
              }
            ],
            "src": "3498:99:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3699:73:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3716:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3721:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3709:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3709:19:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3709:19:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3737:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3756:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3761:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3752:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3752:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3737:11:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3671:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3676:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3687:11:2",
                "type": ""
              }
            ],
            "src": "3603:169:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3827:258:2",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3837:10:2",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3846:1:2",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3841:1:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3906:63:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3931:3:2"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3936:1:2"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3927:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3927:11:2"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3950:3:2"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3955:1:2"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3946:3:2"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3946:11:2"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3940:5:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3940:18:2"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3920:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3920:39:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3920:39:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3867:1:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3870:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3864:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3864:13:2"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3878:19:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3880:15:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3889:1:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3892:2:2",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3885:3:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3885:10:2"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3880:1:2"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3860:3:2",
                    "statements": []
                  },
                  "src": "3856:113:2"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4003:76:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "4053:3:2"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "4058:6:2"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4049:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4049:16:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4067:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4042:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4042:27:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4042:27:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3984:1:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3987:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3981:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3981:13:2"
                  },
                  "nodeType": "YulIf",
                  "src": "3978:101:2"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3809:3:2",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "3814:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3819:6:2",
                "type": ""
              }
            ],
            "src": "3778:307:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4183:272:2",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4193:53:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4240:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4207:32:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4207:39:2"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4197:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4255:78:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4321:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4326:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4262:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4262:71:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4255:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4368:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4375:4:2",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4364:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4364:16:2"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4382:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4387:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4342:21:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4342:52:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4342:52:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4403:46:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4414:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4441:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "4419:21:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4419:29:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4410:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4410:39:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4403:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4164:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4171:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4179:3:2",
                "type": ""
              }
            ],
            "src": "4091:364:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4535:40:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4546:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4562:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4556:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4556:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "4546:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4518:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4528:6:2",
                "type": ""
              }
            ],
            "src": "4461:114:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4692:73:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4709:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4714:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4702:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4702:19:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4702:19:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4730:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4749:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4754:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4745:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4745:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4730:11:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4664:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4669:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4680:11:2",
                "type": ""
              }
            ],
            "src": "4581:184:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4843:60:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4853:11:2",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "4861:3:2"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "4853:4:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4874:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "4886:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4891:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4882:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4882:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "4874:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "4830:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "4838:4:2",
                "type": ""
              }
            ],
            "src": "4771:132:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4964:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4981:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5004:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4986:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4986:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4974:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4974:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4974:37:2"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4952:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4959:3:2",
                "type": ""
              }
            ],
            "src": "4909:108:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5103:99:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5147:6:2"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5155:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5113:33:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5113:46:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5113:46:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5168:28:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5186:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5191:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5182:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5182:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "5168:10:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5076:6:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5084:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "5092:10:2",
                "type": ""
              }
            ],
            "src": "5023:179:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5283:38:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5293:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "5305:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5310:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5301:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5301:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "5293:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "5270:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "5278:4:2",
                "type": ""
              }
            ],
            "src": "5208:113:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5481:608:2",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5491:68:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5553:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5505:47:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5505:54:2"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5495:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5568:93:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5649:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5654:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5575:73:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5575:86:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5568:3:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5670:71:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5735:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5685:49:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5685:56:2"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "5674:7:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5750:21:2",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "5764:7:2"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "5754:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5840:224:2",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5854:34:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5881:6:2"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5875:5:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5875:13:2"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "5858:13:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5901:70:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "5952:13:2"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5967:3:2"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                            "nodeType": "YulIdentifier",
                            "src": "5908:43:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5908:63:2"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5901:3:2"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5984:70:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "6047:6:2"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "5994:52:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5994:60:2"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5984:6:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5802:1:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5805:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5799:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5799:13:2"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5813:18:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5815:14:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5824:1:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5827:1:2",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5820:3:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5820:9:2"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5815:1:2"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5784:14:2",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5786:10:2",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5795:1:2",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "5790:1:2",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "5780:284:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6073:10:2",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "6080:3:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6073:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5460:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5467:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5476:3:2",
                "type": ""
              }
            ],
            "src": "5357:732:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6319:460:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6329:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6341:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6352:2:2",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6337:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6337:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6329:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6376:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6387:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6372:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6372:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6395:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6401:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6391:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6391:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6365:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6365:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6365:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6421:86:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6493:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6502:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6429:63:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6429:78:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6421:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6561:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6574:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6585:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6570:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6570:18:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6517:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6517:72:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6517:72:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6610:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6621:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6606:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6606:18:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6630:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6636:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6626:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6626:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6599:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6599:48:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6599:48:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6656:116:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6758:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6767:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6664:93:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6664:108:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6656:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_string_memory_ptr_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6275:9:2",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6287:6:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6295:6:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6303:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6314:4:2",
                "type": ""
              }
            ],
            "src": "6095:684:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6828:79:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6885:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6894:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6897:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6887:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6887:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6887:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6851:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6876:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "6858:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6858:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6848:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6848:35:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6841:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6841:43:2"
                  },
                  "nodeType": "YulIf",
                  "src": "6838:63:2"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6821:5:2",
                "type": ""
              }
            ],
            "src": "6785:122:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6965:87:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6975:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6997:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6984:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6984:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6975:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7040:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7013:26:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7013:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7013:33:2"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6943:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6951:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6959:5:2",
                "type": ""
              }
            ],
            "src": "6913:139:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7124:263:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7170:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7172:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7172:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7172:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7145:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7154:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7141:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7141:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7166:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7137:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7137:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "7134:119:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7263:117:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7278:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7292:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7282:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7307:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7342:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7353:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7338:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7338:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7362:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7317:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7317:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7307:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7094:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7105:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7117:6:2",
                "type": ""
              }
            ],
            "src": "7058:329:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7711:821:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7721:27:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7733:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7744:3:2",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7729:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7729:19:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7721:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7769:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7780:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7765:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7765:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7788:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7794:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7784:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7784:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7758:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7758:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7758:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7814:86:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7886:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7895:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7822:63:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7822:78:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7814:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7921:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7932:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7917:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7917:18:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7941:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7947:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7937:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7937:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7910:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7910:48:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7910:48:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7967:86:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8039:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8048:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7975:63:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7975:78:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7967:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8074:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8085:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8070:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8070:18:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8094:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8100:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8090:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8090:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8063:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8063:48:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8063:48:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8120:86:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8192:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8201:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8128:63:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8128:78:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8120:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8227:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8238:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8223:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8223:18:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8247:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8253:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8243:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8243:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8216:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8216:48:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8216:48:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8273:86:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8345:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8354:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8281:63:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8281:78:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8273:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "8413:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8426:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8437:3:2",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8422:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8422:19:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8369:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8369:73:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8369:73:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "8496:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8509:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8520:3:2",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8505:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8505:19:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8452:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8452:73:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8452:73:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7643:9:2",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "7655:6:2",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7663:6:2",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7671:6:2",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7679:6:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7687:6:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7695:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7706:4:2",
                "type": ""
              }
            ],
            "src": "7393:1139:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8566:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8583:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8586:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8576:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8576:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8576:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8680:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8683:4:2",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8673:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8673:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8673:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8704:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8707:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8697:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8697:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8697:15:2"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "8538:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8778:62:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8812:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "8814:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8814:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8814:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8801:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8808:1:2",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8798:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8798:12:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8791:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8791:20:2"
                  },
                  "nodeType": "YulIf",
                  "src": "8788:46:2"
                }
              ]
            },
            "name": "validator_assert_t_enum$_UserType_$11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8771:5:2",
                "type": ""
              }
            ],
            "src": "8724:116:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8902:77:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8912:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8923:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8912:7:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8967:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_UserType_$11",
                      "nodeType": "YulIdentifier",
                      "src": "8929:37:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8929:44:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8929:44:2"
                }
              ]
            },
            "name": "cleanup_t_enum$_UserType_$11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8884:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8894:7:2",
                "type": ""
              }
            ],
            "src": "8846:133:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9054:64:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9064:48:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9106:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_UserType_$11",
                      "nodeType": "YulIdentifier",
                      "src": "9077:28:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9077:35:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9064:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_UserType_$11_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9034:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9044:9:2",
                "type": ""
              }
            ],
            "src": "8985:133:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9198:75:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9215:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9260:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_UserType_$11_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "9220:39:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9220:46:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9208:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9208:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9208:59:2"
                }
              ]
            },
            "name": "abi_encode_t_enum$_UserType_$11_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9186:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9193:3:2",
                "type": ""
              }
            ],
            "src": "9124:149:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9386:133:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9396:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9408:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9419:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9404:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9404:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9396:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9485:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9498:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9509:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9494:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9494:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_UserType_$11_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9432:52:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9432:80:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9432:80:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_UserType_$11__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9358:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9370:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9381:4:2",
                "type": ""
              }
            ],
            "src": "9279:240:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9672:1158:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9719:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "9721:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9721:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9721:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9693:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9702:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9689:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9689:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9714:3:2",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9685:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9685:33:2"
                  },
                  "nodeType": "YulIf",
                  "src": "9682:120:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9812:287:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9827:45:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9858:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9869:1:2",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9854:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9854:17:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "9841:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9841:31:2"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9831:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9919:83:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "9921:77:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9921:79:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9921:79:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9891:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9899:18:2",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9888:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9888:30:2"
                      },
                      "nodeType": "YulIf",
                      "src": "9885:117:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10016:73:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10061:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10072:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10057:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10057:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10081:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "10026:30:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10026:63:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10016:6:2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10109:288:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10124:46:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10155:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10166:2:2",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10151:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10151:18:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "10138:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10138:32:2"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10128:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10217:83:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "10219:77:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10219:79:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10219:79:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "10189:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10197:18:2",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10186:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10186:30:2"
                      },
                      "nodeType": "YulIf",
                      "src": "10183:117:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10314:73:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10359:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10370:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10355:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10355:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10379:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "10324:30:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10324:63:2"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "10314:6:2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10407:288:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10422:46:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10453:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10464:2:2",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10449:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10449:18:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "10436:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10436:32:2"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10426:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10515:83:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "10517:77:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10517:79:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10517:79:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "10487:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10495:18:2",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10484:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10484:30:2"
                      },
                      "nodeType": "YulIf",
                      "src": "10481:117:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10612:73:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10657:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10668:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10653:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10653:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10677:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "10622:30:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10622:63:2"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "10612:6:2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10705:118:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10720:16:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10734:2:2",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10724:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10750:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10785:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10796:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10781:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10781:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10805:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "10760:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10760:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "10750:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9618:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9629:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9641:6:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9649:6:2",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9657:6:2",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9665:6:2",
                "type": ""
              }
            ],
            "src": "9525:1305:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10864:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10881:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10884:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10874:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10874:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10874:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10978:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10981:4:2",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10971:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10971:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10971:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11002:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11005:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10995:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10995:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10995:15:2"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "10836:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11066:261:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11076:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11099:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11081:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11081:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11076:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11110:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11133:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11115:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11115:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11110:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11273:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11275:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11275:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11275:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11194:1:2"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11201:66:2",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11269:1:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11197:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11197:74:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11191:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11191:81:2"
                  },
                  "nodeType": "YulIf",
                  "src": "11188:107:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11305:16:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11316:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11319:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11312:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11312:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "11305:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11053:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11056:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "11062:3:2",
                "type": ""
              }
            ],
            "src": "11022:305:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11447:34:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11457:18:2",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "11472:3:2"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "11457:11:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11419:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11424:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "11435:11:2",
                "type": ""
              }
            ],
            "src": "11333:148:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11597:267:2",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11607:53:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11654:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "11621:32:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11621:39:2"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "11611:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11669:96:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11753:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11758:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11676:76:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11676:89:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11669:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11800:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11807:4:2",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11796:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11796:16:2"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11814:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11819:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "11774:21:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11774:52:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11774:52:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11835:23:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11846:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11851:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11842:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11842:16:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11835:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11578:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11585:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11593:3:2",
                "type": ""
              }
            ],
            "src": "11487:377:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12006:139:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12017:102:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12106:6:2"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12115:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12024:81:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12024:95:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12017:3:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12129:10:2",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "12136:3:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12129:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11985:3:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11991:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12002:3:2",
                "type": ""
              }
            ],
            "src": "11870:275:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12179:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12196:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12199:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12189:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12189:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12189:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12293:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12296:4:2",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12286:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12286:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12286:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12317:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12320:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12310:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12310:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12310:15:2"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "12151:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12388:269:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12398:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "12412:4:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12418:1:2",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "12408:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12408:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "12398:6:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12429:38:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "12459:4:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12465:1:2",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12455:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12455:12:2"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "12433:18:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12506:51:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12520:27:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "12534:6:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12542:4:2",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "12530:3:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12530:17:2"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "12520:6:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "12486:18:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12479:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12479:26:2"
                  },
                  "nodeType": "YulIf",
                  "src": "12476:81:2"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12609:42:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "12623:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12623:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12623:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "12573:18:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "12596:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12604:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "12593:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12593:14:2"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "12570:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12570:38:2"
                  },
                  "nodeType": "YulIf",
                  "src": "12567:84:2"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "12372:4:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12381:6:2",
                "type": ""
              }
            ],
            "src": "12337:320:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12769:67:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12791:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12799:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12787:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12787:14:2"
                      },
                      {
                        "hexValue": "4e6f742061206c697374656e65722070726f66696c652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12803:25:2",
                        "type": "",
                        "value": "Not a listener profile."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12780:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12780:49:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12780:49:2"
                }
              ]
            },
            "name": "store_literal_in_memory_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12761:6:2",
                "type": ""
              }
            ],
            "src": "12663:173:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12988:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12998:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13064:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13069:2:2",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13005:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13005:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12998:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13170:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9",
                      "nodeType": "YulIdentifier",
                      "src": "13081:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13081:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13081:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13183:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13194:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13199:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13190:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13190:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13183:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12976:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12984:3:2",
                "type": ""
              }
            ],
            "src": "12842:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13385:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13395:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13407:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13418:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13403:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13403:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13395:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13442:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13453:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13438:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13438:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13461:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13467:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13457:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13457:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13431:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13431:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13431:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13487:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13621:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13495:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13495:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13487:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13365:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13380:4:2",
                "type": ""
              }
            ],
            "src": "13214:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13745:67:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13767:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13775:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13763:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13763:14:2"
                      },
                      {
                        "hexValue": "536f6e6720616c7265616479207075726368617365642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13779:25:2",
                        "type": "",
                        "value": "Song already purchased."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13756:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13756:49:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13756:49:2"
                }
              ]
            },
            "name": "store_literal_in_memory_05aed2d161079a02033540553bee7e5fd7458a6772cb0cc85a08e034153194d8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13737:6:2",
                "type": ""
              }
            ],
            "src": "13639:173:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13964:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13974:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14040:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14045:2:2",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13981:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13981:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13974:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14146:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_05aed2d161079a02033540553bee7e5fd7458a6772cb0cc85a08e034153194d8",
                      "nodeType": "YulIdentifier",
                      "src": "14057:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14057:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14057:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14159:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14170:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14175:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14166:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14166:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14159:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_05aed2d161079a02033540553bee7e5fd7458a6772cb0cc85a08e034153194d8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13952:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13960:3:2",
                "type": ""
              }
            ],
            "src": "13818:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14361:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14371:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14383:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14394:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14379:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14379:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14371:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14418:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14429:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14414:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14414:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14437:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14443:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14433:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14433:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14407:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14407:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14407:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14463:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14597:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_05aed2d161079a02033540553bee7e5fd7458a6772cb0cc85a08e034153194d8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14471:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14471:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14463:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_05aed2d161079a02033540553bee7e5fd7458a6772cb0cc85a08e034153194d8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14341:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14356:4:2",
                "type": ""
              }
            ],
            "src": "14190:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14663:300:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14673:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14696:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14678:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14678:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "14673:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14707:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14730:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14712:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14712:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "14707:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14905:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14907:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14907:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14907:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14817:1:2"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14810:6:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14810:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14803:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14803:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14825:1:2"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14832:66:2",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14900:1:2"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "14828:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14828:74:2"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14822:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14822:81:2"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14799:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14799:105:2"
                  },
                  "nodeType": "YulIf",
                  "src": "14796:131:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14937:20:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14952:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14955:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "14948:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14948:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "14937:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14646:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14649:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "14655:7:2",
                "type": ""
              }
            ],
            "src": "14615:348:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15075:127:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15097:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15105:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15093:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15093:14:2"
                      },
                      {
                        "hexValue": "416d6f756e7420706179656420646f6573206e6f74206d617463682070726963",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15109:34:2",
                        "type": "",
                        "value": "Amount payed does not match pric"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15086:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15086:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15086:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15165:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15173:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15161:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15161:15:2"
                      },
                      {
                        "hexValue": "65206f662074686520736f6e672e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15178:16:2",
                        "type": "",
                        "value": "e of the song."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15154:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15154:41:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15154:41:2"
                }
              ]
            },
            "name": "store_literal_in_memory_503763d64011defe79f0d5161c938235b522eb0e0e6f987bd08b88e3af5a03dd",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15067:6:2",
                "type": ""
              }
            ],
            "src": "14969:233:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15354:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15364:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15430:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15435:2:2",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15371:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15371:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15364:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15536:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_503763d64011defe79f0d5161c938235b522eb0e0e6f987bd08b88e3af5a03dd",
                      "nodeType": "YulIdentifier",
                      "src": "15447:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15447:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15447:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15549:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15560:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15565:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15556:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15556:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15549:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_503763d64011defe79f0d5161c938235b522eb0e0e6f987bd08b88e3af5a03dd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15342:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15350:3:2",
                "type": ""
              }
            ],
            "src": "15208:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15751:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15761:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15773:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15784:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15769:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15769:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15761:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15808:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15819:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15804:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15804:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15827:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15833:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15823:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15823:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15797:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15797:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15797:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15853:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15987:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_503763d64011defe79f0d5161c938235b522eb0e0e6f987bd08b88e3af5a03dd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15861:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15861:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15853:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_503763d64011defe79f0d5161c938235b522eb0e0e6f987bd08b88e3af5a03dd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15731:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15746:4:2",
                "type": ""
              }
            ],
            "src": "15580:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16111:76:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16133:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16141:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16129:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16129:14:2"
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e636520746f2070726f636565642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16145:34:2",
                        "type": "",
                        "value": "Insufficient balance to proceed."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16122:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16122:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16122:58:2"
                }
              ]
            },
            "name": "store_literal_in_memory_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16103:6:2",
                "type": ""
              }
            ],
            "src": "16005:182:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16339:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16349:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16415:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16420:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16356:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16356:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16349:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16521:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a",
                      "nodeType": "YulIdentifier",
                      "src": "16432:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16432:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16432:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16534:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16545:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16550:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16541:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16541:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16534:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16327:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16335:3:2",
                "type": ""
              }
            ],
            "src": "16193:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16736:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16746:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16758:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16769:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16754:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16754:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16746:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16793:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16804:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16789:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16789:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16812:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16818:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16808:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16808:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16782:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16782:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16782:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16838:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16972:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16846:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16846:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16838:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16716:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16731:4:2",
                "type": ""
              }
            ],
            "src": "16565:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17044:87:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17054:11:2",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "17062:3:2"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "17054:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17082:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "17085:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17075:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17075:14:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17075:14:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17098:26:2",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17116:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17119:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "17106:9:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17106:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "17098:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "17031:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "17039:4:2",
                "type": ""
              }
            ],
            "src": "16990:141:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17250:713:2",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17260:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17283:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "sload",
                      "nodeType": "YulIdentifier",
                      "src": "17277:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17277:12:2"
                  },
                  "variables": [
                    {
                      "name": "slotValue",
                      "nodeType": "YulTypedName",
                      "src": "17264:9:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17298:50:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "17338:9:2"
                      }
                    ],
                    "functionName": {
                      "name": "extract_byte_array_length",
                      "nodeType": "YulIdentifier",
                      "src": "17312:25:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17312:36:2"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "17302:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17357:78:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17423:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17428:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17364:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17364:71:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17357:3:2"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "17484:128:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "17537:3:2"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "17546:9:2"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17561:4:2",
                                          "type": "",
                                          "value": "0xff"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "17557:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17557:9:2"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "17542:3:2"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17542:25:2"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "17530:6:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17530:38:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "17530:38:2"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "17581:21:2",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "17592:3:2"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "17597:4:2",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "17588:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17588:14:2"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "17581:3:2"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "17477:135:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17482:1:2",
                        "type": "",
                        "value": "0"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "17628:329:2",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "17673:53:2",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "17720:5:2"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_t_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "17688:31:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17688:38:2"
                            },
                            "variables": [
                              {
                                "name": "dataPos",
                                "nodeType": "YulTypedName",
                                "src": "17677:7:2",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "17739:10:2",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17748:1:2",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "17743:1:2",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "17806:110:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "17835:3:2"
                                          },
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "17840:1:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "17831:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "17831:11:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataPos",
                                            "nodeType": "YulIdentifier",
                                            "src": "17850:7:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "17844:5:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "17844:14:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "17824:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17824:35:2"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "17824:35:2"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "17876:26:2",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dataPos",
                                        "nodeType": "YulIdentifier",
                                        "src": "17891:7:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17900:1:2",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17887:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17887:15:2"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dataPos",
                                      "nodeType": "YulIdentifier",
                                      "src": "17876:7:2"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "17773:1:2"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "17776:6:2"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "17770:2:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17770:13:2"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "17784:21:2",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "17786:17:2",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "17795:1:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17798:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17791:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17791:12:2"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "17786:1:2"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "17766:3:2",
                              "statements": []
                            },
                            "src": "17762:154:2"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "17929:18:2",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "17940:3:2"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "17945:1:2"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "17936:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17936:11:2"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "17929:3:2"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "17621:336:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17626:1:2",
                        "type": "",
                        "value": "1"
                      }
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "17455:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17466:1:2",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "17451:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17451:17:2"
                  },
                  "nodeType": "YulSwitch",
                  "src": "17444:513:2"
                }
              ]
            },
            "name": "abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17231:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17238:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "17246:3:2",
                "type": ""
              }
            ],
            "src": "17161:802:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18188:510:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18198:27:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18210:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18221:3:2",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18206:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18206:19:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18198:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18279:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18292:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18303:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18288:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18288:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18235:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18235:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18235:71:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18327:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18338:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18323:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18323:18:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18347:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18353:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18343:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18343:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18316:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18316:48:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18316:48:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18373:86:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "18445:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18454:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18381:63:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18381:78:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18373:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18480:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18491:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18476:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18476:18:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18500:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18506:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18496:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18496:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18469:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18469:48:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18469:48:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18526:83:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "18595:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18604:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18534:60:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18534:75:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18526:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "18663:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18676:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18687:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18672:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18672:18:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18619:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18619:72:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18619:72:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_storage_t_uint256__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18136:9:2",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "18148:6:2",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "18156:6:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18164:6:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18172:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18183:4:2",
                "type": ""
              }
            ],
            "src": "17969:729:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18895:427:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18905:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18917:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18928:2:2",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18913:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18913:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18905:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18952:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18963:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18948:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18948:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18971:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18977:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18967:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18967:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18941:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18941:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18941:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18997:86:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19069:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "19078:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19005:63:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19005:78:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18997:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19104:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19115:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19100:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19100:18:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "19124:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19130:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19120:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19120:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19093:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19093:48:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19093:48:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19150:83:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "19219:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "19228:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19158:60:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19158:75:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19150:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "19287:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19300:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19311:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19296:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19296:18:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19243:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19243:72:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19243:72:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_storage_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18851:9:2",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "18863:6:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18871:6:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18879:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18890:4:2",
                "type": ""
              }
            ],
            "src": "18704:618:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19434:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19456:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19464:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19452:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19452:14:2"
                      },
                      {
                        "hexValue": "4e6f7420616e206172746973742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19468:16:2",
                        "type": "",
                        "value": "Not an artist."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19445:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19445:40:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19445:40:2"
                }
              ]
            },
            "name": "store_literal_in_memory_8c2a2c55151697061ce1df6c55c874e20efd6df64d62288c126c45f45b39e7dd",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19426:6:2",
                "type": ""
              }
            ],
            "src": "19328:164:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19644:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19654:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19720:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19725:2:2",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19661:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19661:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "19654:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19826:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8c2a2c55151697061ce1df6c55c874e20efd6df64d62288c126c45f45b39e7dd",
                      "nodeType": "YulIdentifier",
                      "src": "19737:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19737:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19737:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19839:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19850:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19855:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19846:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19846:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "19839:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8c2a2c55151697061ce1df6c55c874e20efd6df64d62288c126c45f45b39e7dd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19632:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "19640:3:2",
                "type": ""
              }
            ],
            "src": "19498:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20041:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20051:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20063:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20074:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20059:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20059:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20051:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20098:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20109:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20094:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20094:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "20117:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20123:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20113:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20113:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20087:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20087:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20087:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20143:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "20277:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8c2a2c55151697061ce1df6c55c874e20efd6df64d62288c126c45f45b39e7dd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20151:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20151:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20143:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8c2a2c55151697061ce1df6c55c874e20efd6df64d62288c126c45f45b39e7dd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20021:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20036:4:2",
                "type": ""
              }
            ],
            "src": "19870:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20401:114:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20423:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20431:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20419:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20419:14:2"
                      },
                      {
                        "hexValue": "4475706c6963617465206861736820686173206265656e206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20435:34:2",
                        "type": "",
                        "value": "Duplicate hash has been detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20412:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20412:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20412:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20491:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20499:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20487:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20487:15:2"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20504:3:2",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20480:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20480:28:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20480:28:2"
                }
              ]
            },
            "name": "store_literal_in_memory_56ab5ac995d8d22b9db30e24405fe75a02abc80b941eede0f4484baa6dae0783",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20393:6:2",
                "type": ""
              }
            ],
            "src": "20295:220:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20667:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20677:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20743:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20748:2:2",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20684:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20684:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "20677:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20849:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_56ab5ac995d8d22b9db30e24405fe75a02abc80b941eede0f4484baa6dae0783",
                      "nodeType": "YulIdentifier",
                      "src": "20760:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20760:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20760:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20862:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20873:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20878:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20869:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20869:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20862:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_56ab5ac995d8d22b9db30e24405fe75a02abc80b941eede0f4484baa6dae0783_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20655:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20663:3:2",
                "type": ""
              }
            ],
            "src": "20521:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21064:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21074:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21086:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21097:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21082:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21082:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21074:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21121:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21132:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21117:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21117:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "21140:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21146:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21136:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21136:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21110:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21110:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21110:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21166:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21300:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_56ab5ac995d8d22b9db30e24405fe75a02abc80b941eede0f4484baa6dae0783_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21174:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21174:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21166:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_56ab5ac995d8d22b9db30e24405fe75a02abc80b941eede0f4484baa6dae0783__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21044:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21059:4:2",
                "type": ""
              }
            ],
            "src": "20893:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21540:513:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21550:27:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21562:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21573:3:2",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21558:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21558:19:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21550:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21631:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21644:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21655:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21640:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21640:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21587:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21587:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21587:71:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21679:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21690:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21675:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21675:18:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "21699:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21705:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21695:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21695:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21668:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21668:48:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21668:48:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21725:86:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "21797:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21806:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21733:63:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21733:78:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21725:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21832:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21843:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21828:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21828:18:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "21852:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21858:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21848:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21848:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21821:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21821:48:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21821:48:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21878:86:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "21950:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21959:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21886:63:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21886:78:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21878:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "22018:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22031:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22042:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22027:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22027:18:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21974:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21974:72:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21974:72:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21488:9:2",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "21500:6:2",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "21508:6:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "21516:6:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21524:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21535:4:2",
                "type": ""
              }
            ],
            "src": "21318:735:2"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_string_memory_ptr_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_UserType_$11(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_UserType_$11(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_UserType_$11(value)\n    }\n\n    function convert_t_enum$_UserType_$11_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_UserType_$11(value)\n    }\n\n    function abi_encode_t_enum$_UserType_$11_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_UserType_$11_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_UserType_$11__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_UserType_$11_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not a listener profile.\")\n\n    }\n\n    function abi_encode_t_stringliteral_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_05aed2d161079a02033540553bee7e5fd7458a6772cb0cc85a08e034153194d8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Song already purchased.\")\n\n    }\n\n    function abi_encode_t_stringliteral_05aed2d161079a02033540553bee7e5fd7458a6772cb0cc85a08e034153194d8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_05aed2d161079a02033540553bee7e5fd7458a6772cb0cc85a08e034153194d8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_05aed2d161079a02033540553bee7e5fd7458a6772cb0cc85a08e034153194d8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_05aed2d161079a02033540553bee7e5fd7458a6772cb0cc85a08e034153194d8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function store_literal_in_memory_503763d64011defe79f0d5161c938235b522eb0e0e6f987bd08b88e3af5a03dd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount payed does not match pric\")\n\n        mstore(add(memPtr, 32), \"e of the song.\")\n\n    }\n\n    function abi_encode_t_stringliteral_503763d64011defe79f0d5161c938235b522eb0e0e6f987bd08b88e3af5a03dd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_503763d64011defe79f0d5161c938235b522eb0e0e6f987bd08b88e3af5a03dd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_503763d64011defe79f0d5161c938235b522eb0e0e6f987bd08b88e3af5a03dd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_503763d64011defe79f0d5161c938235b522eb0e0e6f987bd08b88e3af5a03dd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance to proceed.\")\n\n    }\n\n    function abi_encode_t_stringliteral_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, 0x20)\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_storage_t_uint256__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_storage_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_8c2a2c55151697061ce1df6c55c874e20efd6df64d62288c126c45f45b39e7dd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not an artist.\")\n\n    }\n\n    function abi_encode_t_stringliteral_8c2a2c55151697061ce1df6c55c874e20efd6df64d62288c126c45f45b39e7dd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_8c2a2c55151697061ce1df6c55c874e20efd6df64d62288c126c45f45b39e7dd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8c2a2c55151697061ce1df6c55c874e20efd6df64d62288c126c45f45b39e7dd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8c2a2c55151697061ce1df6c55c874e20efd6df64d62288c126c45f45b39e7dd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_56ab5ac995d8d22b9db30e24405fe75a02abc80b941eede0f4484baa6dae0783(memPtr) {\n\n        mstore(add(memPtr, 0), \"Duplicate hash has been detected\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_56ab5ac995d8d22b9db30e24405fe75a02abc80b941eede0f4484baa6dae0783_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_56ab5ac995d8d22b9db30e24405fe75a02abc80b941eede0f4484baa6dae0783(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_56ab5ac995d8d22b9db30e24405fe75a02abc80b941eede0f4484baa6dae0783__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_56ab5ac995d8d22b9db30e24405fe75a02abc80b941eede0f4484baa6dae0783_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "66:6305:0:-:0;;;1181:108;;;;;;;;;;1221:1;1205:13;:17;;;;1250:1;1232:15;:19;;;;1281:1;1261:17;:21;;;;66:6305;;;;;;",
  "deployedSourceMap": "66:6305:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1295:90;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1821:351;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2204:346;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;4189:1007;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1517:298;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5852:517;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;2556:336;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1391:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5318:502;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3044:990;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1295:90;1339:7;1365:13;;1358:20;;1295:90;:::o;1821:351::-;1900:1;1881:15;;:20;;;;;;;:::i;:::-;;;;;;;;1912:23;;:::i;:::-;1962:5;1945:9;:14;;:22;;;;1998:15;;1977:9;:18;;:36;;;;;2057:10;2023:16;2040:5;2023:23;;;;;;:::i;:::-;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;2104:9;2079:10;:22;2090:10;2079:22;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2150:15;2123:12;:24;2136:10;2123:24;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1871:301;1821:351;:::o;2204:346::-;2292:13;2319:7;2340:16;2402:12;:24;2415:10;2402:24;;;;;;;;;;;;;;;:29;;2445:12;:24;2458:10;2445:24;;;;;;;;;;;;;;;:35;;;2494:12;:24;2507:10;2494:24;;;;;;;;;;;;;;;:39;;2381:162;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:346;;;:::o;4189:1007::-;4297:17;4269:45;;;;;;;;:::i;:::-;;:12;:24;4282:10;4269:24;;;;;;;;;;;;;;;;;;;;;;;;;:45;;;;;;;;:::i;:::-;;;4248:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;4395:12;:24;4408:10;4395:24;;;;;;;;;;;;;;;:40;;:49;4436:7;4395:49;;;;;;;;;;;;;;;;;;;;;4394:50;4373:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;4504:19;4526:8;:17;4535:7;4526:17;;;;;;;;;;;4504:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4605:5;4589:7;:13;;;:21;;;;:::i;:::-;4575:9;:36;4554:129;;;;;;;;;;;;:::i;:::-;;;;;;;;;4735:9;4714:10;:18;;;:30;4693:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;4813:7;:21;;;:30;;:41;4844:9;4813:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4895:1;4864:18;:27;4883:7;4864:27;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;4907:12;:24;4920:10;4907:24;;;;;;;;;;;;;;;:39;;4952:7;4907:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5022:4;4970:12;:24;4983:10;4970:24;;;;;;;;;;;;;;;:40;;:49;5011:7;4970:49;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;5042:147;5069:7;:14;;;5097:7;:16;;;5127:12;:24;5140:10;5127:24;;;;;;;;;;;;;;;:29;;5170:9;5042:147;;;;;;;;;:::i;:::-;;;;;;;;4238:958;4189:1007;:::o;1517:298::-;1600:1;1579:17;;:22;;;;;;;:::i;:::-;;;;;;;;1612:28;1643:12;:24;1656:10;1643:24;;;;;;;;;;;;;;;1612:55;;1696:5;1677:11;:16;;:24;;;;;;;;;;;;:::i;:::-;;1736:17;;1711:11;:22;;:42;;;;1791:17;1764:12;:24;1777:10;1764:24;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1569:246;1517:298;:::o;5852:517::-;5951:13;5978;6005;6032;6059:7;6080;6133:8;:17;6142:7;6133:17;;;;;;;;;;;:26;;6173:8;:17;6182:7;6173:17;;;;;;;;;;;:28;;6215:8;:17;6224:7;6215:17;;;;;;;;;;;:23;;6252:8;:17;6261:7;6252:17;;;;;;;;;;;:22;;6288:8;:17;6297:7;6288:17;;;;;;;;;;;:23;;;6325:18;:27;6344:7;6325:27;;;;;;;;;;;;6112:250;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5852:517;;;;;;;:::o;2556:336::-;2642:13;2669:7;2690:16;2752:10;:22;2763:10;2752:22;;;;;;;;;;;;;;;:27;;2793:10;:22;2804:10;2793:22;;;;;;;;;;;;;;;:31;;;2838:10;:22;2849:10;2838:22;;;;;;;;;;;;;;;:37;;2731:154;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2556:336;;;:::o;1391:100::-;1433:8;1460:12;:24;1473:10;1460:24;;;;;;;;;;;;;;;;;;;;;;;;;1453:31;;1391:100;:::o;5318:502::-;5440:17;5412:45;;;;;;;;:::i;:::-;;:12;:24;5425:10;5412:24;;;;;;;;;;;;;;;;;;;;;;;;;:45;;;;;;;;:::i;:::-;;;5391:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;5558:9;5537:10;:18;;;:30;5516:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;5636:16;5653:10;5636:28;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:37;;:48;5674:9;5636:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5700:113;5727:10;5751:12;:24;5764:10;5751:24;;;;;;;;;;;;;;;:29;;5794:9;5700:113;;;;;;;;:::i;:::-;;;;;;;;5318:502;:::o;3044:990::-;3232:15;3204:43;;;;;;;;:::i;:::-;;:12;:24;3217:10;3204:24;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;;;;;;:::i;:::-;;;3196:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3285:12;3298:5;3285:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3284:20;3276:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3370:1;3353:13;;:18;;;;;;;:::i;:::-;;;;;;;;3382:19;;:::i;:::-;3428:13;;3411:7;:14;;:30;;;;;3470:5;3451:7;:16;;:24;;;;3506:10;:22;3517:10;3506:22;;;;;;;;;;;;;;;:27;;3485:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:18;;:48;;;;3559:6;3543:7;:13;;:22;;;;3590:5;3575:7;:12;;:20;;;;3621:6;3605:7;:13;;:22;;;;;3669:10;3637:7;:21;;:43;;;;;;;;;;;3727:1;3691:18;:33;3710:13;;3691:33;;;;;;;;;;;:37;;;;3765:7;3739:8;:23;3748:13;;3739:23;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3782:10;:22;3793:10;3782:22;;;;;;;;;;;;;;;:37;;3825:13;;3782:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3871:4;3849:12;3862:5;3849:19;;;;;;:::i;:::-;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;3891:136;3914:7;:14;;;3942:7;:16;;;3972:7;:18;;;4004:7;:13;;;3891:136;;;;;;;;;:::i;:::-;;;;;;;;3186:848;3044:990;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:117;878:1;875;868:12;892:117;1001:1;998;991:12;1015:102;1056:6;1107:2;1103:7;1098:2;1091:5;1087:14;1083:28;1073:38;;1015:102;;;:::o;1123:180::-;1171:77;1168:1;1161:88;1268:4;1265:1;1258:15;1292:4;1289:1;1282:15;1309:281;1392:27;1414:4;1392:27;:::i;:::-;1384:6;1380:40;1522:6;1510:10;1507:22;1486:18;1474:10;1471:34;1468:62;1465:88;;;1533:18;;:::i;:::-;1465:88;1573:10;1569:2;1562:22;1352:238;1309:281;;:::o;1596:129::-;1630:6;1657:20;;:::i;:::-;1647:30;;1686:33;1714:4;1706:6;1686:33;:::i;:::-;1596:129;;;:::o;1731:308::-;1793:4;1883:18;1875:6;1872:30;1869:56;;;1905:18;;:::i;:::-;1869:56;1943:29;1965:6;1943:29;:::i;:::-;1935:37;;2027:4;2021;2017:15;2009:23;;1731:308;;;:::o;2045:154::-;2129:6;2124:3;2119;2106:30;2191:1;2182:6;2177:3;2173:16;2166:27;2045:154;;;:::o;2205:412::-;2283:5;2308:66;2324:49;2366:6;2324:49;:::i;:::-;2308:66;:::i;:::-;2299:75;;2397:6;2390:5;2383:21;2435:4;2428:5;2424:16;2473:3;2464:6;2459:3;2455:16;2452:25;2449:112;;;2480:79;;:::i;:::-;2449:112;2570:41;2604:6;2599:3;2594;2570:41;:::i;:::-;2289:328;2205:412;;;;;:::o;2637:340::-;2693:5;2742:3;2735:4;2727:6;2723:17;2719:27;2709:122;;2750:79;;:::i;:::-;2709:122;2867:6;2854:20;2892:79;2967:3;2959:6;2952:4;2944:6;2940:17;2892:79;:::i;:::-;2883:88;;2699:278;2637:340;;;;:::o;2983:509::-;3052:6;3101:2;3089:9;3080:7;3076:23;3072:32;3069:119;;;3107:79;;:::i;:::-;3069:119;3255:1;3244:9;3240:17;3227:31;3285:18;3277:6;3274:30;3271:117;;;3307:79;;:::i;:::-;3271:117;3412:63;3467:7;3458:6;3447:9;3443:22;3412:63;:::i;:::-;3402:73;;3198:287;2983:509;;;;:::o;3498:99::-;3550:6;3584:5;3578:12;3568:22;;3498:99;;;:::o;3603:169::-;3687:11;3721:6;3716:3;3709:19;3761:4;3756:3;3752:14;3737:29;;3603:169;;;;:::o;3778:307::-;3846:1;3856:113;3870:6;3867:1;3864:13;3856:113;;;3955:1;3950:3;3946:11;3940:18;3936:1;3931:3;3927:11;3920:39;3892:2;3889:1;3885:10;3880:15;;3856:113;;;3987:6;3984:1;3981:13;3978:101;;;4067:1;4058:6;4053:3;4049:16;4042:27;3978:101;3827:258;3778:307;;;:::o;4091:364::-;4179:3;4207:39;4240:5;4207:39;:::i;:::-;4262:71;4326:6;4321:3;4262:71;:::i;:::-;4255:78;;4342:52;4387:6;4382:3;4375:4;4368:5;4364:16;4342:52;:::i;:::-;4419:29;4441:6;4419:29;:::i;:::-;4414:3;4410:39;4403:46;;4183:272;4091:364;;;;:::o;4461:114::-;4528:6;4562:5;4556:12;4546:22;;4461:114;;;:::o;4581:184::-;4680:11;4714:6;4709:3;4702:19;4754:4;4749:3;4745:14;4730:29;;4581:184;;;;:::o;4771:132::-;4838:4;4861:3;4853:11;;4891:4;4886:3;4882:14;4874:22;;4771:132;;;:::o;4909:108::-;4986:24;5004:5;4986:24;:::i;:::-;4981:3;4974:37;4909:108;;:::o;5023:179::-;5092:10;5113:46;5155:3;5147:6;5113:46;:::i;:::-;5191:4;5186:3;5182:14;5168:28;;5023:179;;;;:::o;5208:113::-;5278:4;5310;5305:3;5301:14;5293:22;;5208:113;;;:::o;5357:732::-;5476:3;5505:54;5553:5;5505:54;:::i;:::-;5575:86;5654:6;5649:3;5575:86;:::i;:::-;5568:93;;5685:56;5735:5;5685:56;:::i;:::-;5764:7;5795:1;5780:284;5805:6;5802:1;5799:13;5780:284;;;5881:6;5875:13;5908:63;5967:3;5952:13;5908:63;:::i;:::-;5901:70;;5994:60;6047:6;5994:60;:::i;:::-;5984:70;;5840:224;5827:1;5824;5820:9;5815:14;;5780:284;;;5784:14;6080:3;6073:10;;5481:608;;;5357:732;;;;:::o;6095:684::-;6314:4;6352:2;6341:9;6337:18;6329:26;;6401:9;6395:4;6391:20;6387:1;6376:9;6372:17;6365:47;6429:78;6502:4;6493:6;6429:78;:::i;:::-;6421:86;;6517:72;6585:2;6574:9;6570:18;6561:6;6517:72;:::i;:::-;6636:9;6630:4;6626:20;6621:2;6610:9;6606:18;6599:48;6664:108;6767:4;6758:6;6664:108;:::i;:::-;6656:116;;6095:684;;;;;;:::o;6785:122::-;6858:24;6876:5;6858:24;:::i;:::-;6851:5;6848:35;6838:63;;6897:1;6894;6887:12;6838:63;6785:122;:::o;6913:139::-;6959:5;6997:6;6984:20;6975:29;;7013:33;7040:5;7013:33;:::i;:::-;6913:139;;;;:::o;7058:329::-;7117:6;7166:2;7154:9;7145:7;7141:23;7137:32;7134:119;;;7172:79;;:::i;:::-;7134:119;7292:1;7317:53;7362:7;7353:6;7342:9;7338:22;7317:53;:::i;:::-;7307:63;;7263:117;7058:329;;;;:::o;7393:1139::-;7706:4;7744:3;7733:9;7729:19;7721:27;;7794:9;7788:4;7784:20;7780:1;7769:9;7765:17;7758:47;7822:78;7895:4;7886:6;7822:78;:::i;:::-;7814:86;;7947:9;7941:4;7937:20;7932:2;7921:9;7917:18;7910:48;7975:78;8048:4;8039:6;7975:78;:::i;:::-;7967:86;;8100:9;8094:4;8090:20;8085:2;8074:9;8070:18;8063:48;8128:78;8201:4;8192:6;8128:78;:::i;:::-;8120:86;;8253:9;8247:4;8243:20;8238:2;8227:9;8223:18;8216:48;8281:78;8354:4;8345:6;8281:78;:::i;:::-;8273:86;;8369:73;8437:3;8426:9;8422:19;8413:6;8369:73;:::i;:::-;8452;8520:3;8509:9;8505:19;8496:6;8452:73;:::i;:::-;7393:1139;;;;;;;;;:::o;8538:180::-;8586:77;8583:1;8576:88;8683:4;8680:1;8673:15;8707:4;8704:1;8697:15;8724:116;8808:1;8801:5;8798:12;8788:46;;8814:18;;:::i;:::-;8788:46;8724:116;:::o;8846:133::-;8894:7;8923:5;8912:16;;8929:44;8967:5;8929:44;:::i;:::-;8846:133;;;:::o;8985:::-;9044:9;9077:35;9106:5;9077:35;:::i;:::-;9064:48;;8985:133;;;:::o;9124:149::-;9220:46;9260:5;9220:46;:::i;:::-;9215:3;9208:59;9124:149;;:::o;9279:240::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9432:80;9509:1;9498:9;9494:17;9485:6;9432:80;:::i;:::-;9279:240;;;;:::o;9525:1305::-;9641:6;9649;9657;9665;9714:3;9702:9;9693:7;9689:23;9685:33;9682:120;;;9721:79;;:::i;:::-;9682:120;9869:1;9858:9;9854:17;9841:31;9899:18;9891:6;9888:30;9885:117;;;9921:79;;:::i;:::-;9885:117;10026:63;10081:7;10072:6;10061:9;10057:22;10026:63;:::i;:::-;10016:73;;9812:287;10166:2;10155:9;10151:18;10138:32;10197:18;10189:6;10186:30;10183:117;;;10219:79;;:::i;:::-;10183:117;10324:63;10379:7;10370:6;10359:9;10355:22;10324:63;:::i;:::-;10314:73;;10109:288;10464:2;10453:9;10449:18;10436:32;10495:18;10487:6;10484:30;10481:117;;;10517:79;;:::i;:::-;10481:117;10622:63;10677:7;10668:6;10657:9;10653:22;10622:63;:::i;:::-;10612:73;;10407:288;10734:2;10760:53;10805:7;10796:6;10785:9;10781:22;10760:53;:::i;:::-;10750:63;;10705:118;9525:1305;;;;;;;:::o;10836:180::-;10884:77;10881:1;10874:88;10981:4;10978:1;10971:15;11005:4;11002:1;10995:15;11022:305;11062:3;11081:20;11099:1;11081:20;:::i;:::-;11076:25;;11115:20;11133:1;11115:20;:::i;:::-;11110:25;;11269:1;11201:66;11197:74;11194:1;11191:81;11188:107;;;11275:18;;:::i;:::-;11188:107;11319:1;11316;11312:9;11305:16;;11022:305;;;;:::o;11333:148::-;11435:11;11472:3;11457:18;;11333:148;;;;:::o;11487:377::-;11593:3;11621:39;11654:5;11621:39;:::i;:::-;11676:89;11758:6;11753:3;11676:89;:::i;:::-;11669:96;;11774:52;11819:6;11814:3;11807:4;11800:5;11796:16;11774:52;:::i;:::-;11851:6;11846:3;11842:16;11835:23;;11597:267;11487:377;;;;:::o;11870:275::-;12002:3;12024:95;12115:3;12106:6;12024:95;:::i;:::-;12017:102;;12136:3;12129:10;;11870:275;;;;:::o;12151:180::-;12199:77;12196:1;12189:88;12296:4;12293:1;12286:15;12320:4;12317:1;12310:15;12337:320;12381:6;12418:1;12412:4;12408:12;12398:22;;12465:1;12459:4;12455:12;12486:18;12476:81;;12542:4;12534:6;12530:17;12520:27;;12476:81;12604:2;12596:6;12593:14;12573:18;12570:38;12567:84;;12623:18;;:::i;:::-;12567:84;12388:269;12337:320;;;:::o;12663:173::-;12803:25;12799:1;12791:6;12787:14;12780:49;12663:173;:::o;12842:366::-;12984:3;13005:67;13069:2;13064:3;13005:67;:::i;:::-;12998:74;;13081:93;13170:3;13081:93;:::i;:::-;13199:2;13194:3;13190:12;13183:19;;12842:366;;;:::o;13214:419::-;13380:4;13418:2;13407:9;13403:18;13395:26;;13467:9;13461:4;13457:20;13453:1;13442:9;13438:17;13431:47;13495:131;13621:4;13495:131;:::i;:::-;13487:139;;13214:419;;;:::o;13639:173::-;13779:25;13775:1;13767:6;13763:14;13756:49;13639:173;:::o;13818:366::-;13960:3;13981:67;14045:2;14040:3;13981:67;:::i;:::-;13974:74;;14057:93;14146:3;14057:93;:::i;:::-;14175:2;14170:3;14166:12;14159:19;;13818:366;;;:::o;14190:419::-;14356:4;14394:2;14383:9;14379:18;14371:26;;14443:9;14437:4;14433:20;14429:1;14418:9;14414:17;14407:47;14471:131;14597:4;14471:131;:::i;:::-;14463:139;;14190:419;;;:::o;14615:348::-;14655:7;14678:20;14696:1;14678:20;:::i;:::-;14673:25;;14712:20;14730:1;14712:20;:::i;:::-;14707:25;;14900:1;14832:66;14828:74;14825:1;14822:81;14817:1;14810:9;14803:17;14799:105;14796:131;;;14907:18;;:::i;:::-;14796:131;14955:1;14952;14948:9;14937:20;;14615:348;;;;:::o;14969:233::-;15109:34;15105:1;15097:6;15093:14;15086:58;15178:16;15173:2;15165:6;15161:15;15154:41;14969:233;:::o;15208:366::-;15350:3;15371:67;15435:2;15430:3;15371:67;:::i;:::-;15364:74;;15447:93;15536:3;15447:93;:::i;:::-;15565:2;15560:3;15556:12;15549:19;;15208:366;;;:::o;15580:419::-;15746:4;15784:2;15773:9;15769:18;15761:26;;15833:9;15827:4;15823:20;15819:1;15808:9;15804:17;15797:47;15861:131;15987:4;15861:131;:::i;:::-;15853:139;;15580:419;;;:::o;16005:182::-;16145:34;16141:1;16133:6;16129:14;16122:58;16005:182;:::o;16193:366::-;16335:3;16356:67;16420:2;16415:3;16356:67;:::i;:::-;16349:74;;16432:93;16521:3;16432:93;:::i;:::-;16550:2;16545:3;16541:12;16534:19;;16193:366;;;:::o;16565:419::-;16731:4;16769:2;16758:9;16754:18;16746:26;;16818:9;16812:4;16808:20;16804:1;16793:9;16789:17;16782:47;16846:131;16972:4;16846:131;:::i;:::-;16838:139;;16565:419;;;:::o;16990:141::-;17039:4;17062:3;17054:11;;17085:3;17082:1;17075:14;17119:4;17116:1;17106:18;17098:26;;16990:141;;;:::o;17161:802::-;17246:3;17283:5;17277:12;17312:36;17338:9;17312:36;:::i;:::-;17364:71;17428:6;17423:3;17364:71;:::i;:::-;17357:78;;17466:1;17455:9;17451:17;17482:1;17477:135;;;;17626:1;17621:336;;;;17444:513;;17477:135;17561:4;17557:9;17546;17542:25;17537:3;17530:38;17597:4;17592:3;17588:14;17581:21;;17477:135;;17621:336;17688:38;17720:5;17688:38;:::i;:::-;17748:1;17762:154;17776:6;17773:1;17770:13;17762:154;;;17850:7;17844:14;17840:1;17835:3;17831:11;17824:35;17900:1;17891:7;17887:15;17876:26;;17798:4;17795:1;17791:12;17786:17;;17762:154;;;17945:1;17940:3;17936:11;17929:18;;17628:329;;17444:513;;17250:713;;17161:802;;;;:::o;17969:729::-;18183:4;18221:3;18210:9;18206:19;18198:27;;18235:71;18303:1;18292:9;18288:17;18279:6;18235:71;:::i;:::-;18353:9;18347:4;18343:20;18338:2;18327:9;18323:18;18316:48;18381:78;18454:4;18445:6;18381:78;:::i;:::-;18373:86;;18506:9;18500:4;18496:20;18491:2;18480:9;18476:18;18469:48;18534:75;18604:4;18595:6;18534:75;:::i;:::-;18526:83;;18619:72;18687:2;18676:9;18672:18;18663:6;18619:72;:::i;:::-;17969:729;;;;;;;:::o;18704:618::-;18890:4;18928:2;18917:9;18913:18;18905:26;;18977:9;18971:4;18967:20;18963:1;18952:9;18948:17;18941:47;19005:78;19078:4;19069:6;19005:78;:::i;:::-;18997:86;;19130:9;19124:4;19120:20;19115:2;19104:9;19100:18;19093:48;19158:75;19228:4;19219:6;19158:75;:::i;:::-;19150:83;;19243:72;19311:2;19300:9;19296:18;19287:6;19243:72;:::i;:::-;18704:618;;;;;;:::o;19328:164::-;19468:16;19464:1;19456:6;19452:14;19445:40;19328:164;:::o;19498:366::-;19640:3;19661:67;19725:2;19720:3;19661:67;:::i;:::-;19654:74;;19737:93;19826:3;19737:93;:::i;:::-;19855:2;19850:3;19846:12;19839:19;;19498:366;;;:::o;19870:419::-;20036:4;20074:2;20063:9;20059:18;20051:26;;20123:9;20117:4;20113:20;20109:1;20098:9;20094:17;20087:47;20151:131;20277:4;20151:131;:::i;:::-;20143:139;;19870:419;;;:::o;20295:220::-;20435:34;20431:1;20423:6;20419:14;20412:58;20504:3;20499:2;20491:6;20487:15;20480:28;20295:220;:::o;20521:366::-;20663:3;20684:67;20748:2;20743:3;20684:67;:::i;:::-;20677:74;;20760:93;20849:3;20760:93;:::i;:::-;20878:2;20873:3;20869:12;20862:19;;20521:366;;;:::o;20893:419::-;21059:4;21097:2;21086:9;21082:18;21074:26;;21146:9;21140:4;21136:20;21132:1;21121:9;21117:17;21110:47;21174:131;21300:4;21174:131;:::i;:::-;21166:139;;20893:419;;;:::o;21318:735::-;21535:4;21573:3;21562:9;21558:19;21550:27;;21587:71;21655:1;21644:9;21640:17;21631:6;21587:71;:::i;:::-;21705:9;21699:4;21695:20;21690:2;21679:9;21675:18;21668:48;21733:78;21806:4;21797:6;21733:78;:::i;:::-;21725:86;;21858:9;21852:4;21848:20;21843:2;21832:9;21828:18;21821:48;21886:78;21959:4;21950:6;21886:78;:::i;:::-;21878:86;;21974:72;22042:2;22031:9;22027:18;22018:6;21974:72;:::i;:::-;21318:735;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\ncontract Knack {\n    // defining trackers\n    uint256 listenerIDTracker;\n    uint256 artistIDTracker;\n    uint256 songIDTracker;\n\n    // usertypes\n    enum UserType {\n        UNDEFINED,\n        ARTIST,\n        LISTENER\n    }\n\n    // defining users\n    struct Artist {\n        string name;\n        uint256 artistID;\n        uint256[] songsPublished;\n    }\n\n    struct Listener {\n        string name;\n        uint256 listenerID;\n        uint256[] songsPurchased;\n        mapping(uint256 => bool) isSongPurchased;\n    }\n\n    // defining song struct\n    struct Song {\n        string songName;\n        string artistName;\n        string genre;\n        string hash;\n        uint256 songID;\n        uint256 price;\n        address payable artistAddress;\n    }\n\n    // mappings\n    mapping(address => UserType) identifyUser;\n    mapping(address => Artist) allArtists;\n    mapping(address => Listener) allListeners;\n    mapping(uint256 => Song) allSongs;\n    mapping(uint256 => uint256) timesSongPurchased;\n    mapping(string => bool) songHashUsed;\n    mapping(string => address payable) getArtistAddress;\n\n    // methods\n    constructor() {\n        songIDTracker = 0;\n        artistIDTracker = 0;\n        listenerIDTracker = 0;\n    }\n\n    function getNumSongs() public view returns (uint256) {\n        return songIDTracker;\n    }\n\n    function checkUser() public view returns (UserType) {\n        return identifyUser[msg.sender];\n    }\n\n    // create users\n    function addNewListener(string memory _name) public {\n        listenerIDTracker += 1;\n\n        Listener storage newListener = allListeners[msg.sender];\n        newListener.name = _name;\n        newListener.listenerID = listenerIDTracker;\n\n        identifyUser[msg.sender] = UserType.LISTENER;\n    }\n\n    function addNewArtist(string memory _name) public {\n        artistIDTracker += 1;\n\n        Artist memory newArtist;\n        newArtist.name = _name;\n        newArtist.artistID = artistIDTracker;\n        getArtistAddress[_name] = payable(msg.sender);\n\n        allArtists[msg.sender] = newArtist;\n        identifyUser[msg.sender] = UserType.ARTIST;\n    }\n\n    // fetch user details\n    function getListenerDetails()\n        public\n        view\n        returns (\n            string memory,\n            uint256,\n            uint256[] memory\n        )\n    {\n        return (\n            allListeners[msg.sender].name,\n            allListeners[msg.sender].listenerID,\n            allListeners[msg.sender].songsPurchased\n        );\n    }\n\n    function getArtistDetails()\n        public\n        view\n        returns (\n            string memory,\n            uint256,\n            uint256[] memory\n        )\n    {\n        return (\n            allArtists[msg.sender].name,\n            allArtists[msg.sender].artistID,\n            allArtists[msg.sender].songsPublished\n        );\n    }\n\n    // create song\n    event songAdded(\n        uint256 songID,\n        string songName,\n        string artistName,\n        uint256 price\n    );\n\n    function addSong(\n        string memory _name,\n        string memory _genre,\n        string memory _hash,\n        uint256 _price\n    ) public {\n        require(identifyUser[msg.sender] == UserType.ARTIST, \"Not an artist.\");\n        require(!songHashUsed[_hash], \"Duplicate hash has been detected.\");\n\n        songIDTracker += 1;\n\n        Song memory newSong;\n        newSong.songID = songIDTracker;\n        newSong.songName = _name;\n        newSong.artistName = allArtists[msg.sender].name;\n        newSong.genre = _genre;\n        newSong.hash = _hash;\n        newSong.price = _price;\n        newSong.artistAddress = payable(msg.sender);\n\n        timesSongPurchased[songIDTracker] = 0;\n\n        allSongs[songIDTracker] = newSong;\n        allArtists[msg.sender].songsPublished.push(songIDTracker);\n        songHashUsed[_hash] = true;\n\n        emit songAdded(\n            newSong.songID,\n            newSong.songName,\n            newSong.artistName,\n            newSong.price\n        );\n    }\n\n    // buy song\n    event songPurchased(\n        uint256 songID,\n        string songName,\n        string listenerName,\n        uint256 price\n    );\n\n    function buySong(uint256 _songID) public payable {\n        require(\n            identifyUser[msg.sender] == UserType.LISTENER,\n            \"Not a listener profile.\"\n        );\n        require(\n            !allListeners[msg.sender].isSongPurchased[_songID],\n            \"Song already purchased.\"\n        );\n\n        Song memory curSong = allSongs[_songID];\n\n        require(\n            msg.value == (curSong.price * 1 wei),\n            \"Amount payed does not match price of the song.\"\n        );\n        require(\n            msg.sender.balance > msg.value,\n            \"Insufficient balance to proceed.\"\n        );\n\n        curSong.artistAddress.transfer(msg.value);\n        timesSongPurchased[_songID] += 1;\n\n        allListeners[msg.sender].songsPurchased.push(_songID);\n        allListeners[msg.sender].isSongPurchased[_songID] = true;\n\n        emit songPurchased(\n            curSong.songID,\n            curSong.songName,\n            allListeners[msg.sender].name,\n            msg.value\n        );\n    }\n\n    // support artist by donation\n    event artistDonated(string artistName, string listenerName, uint256 amount);\n\n    function donateArtist(string memory artistName) public payable {\n        require(\n            identifyUser[msg.sender] == UserType.LISTENER,\n            \"Not a listener profile.\"\n        );\n        require(\n            msg.sender.balance > msg.value,\n            \"Insufficient balance to proceed.\"\n        );\n\n        getArtistAddress[artistName].transfer(msg.value);\n\n        emit artistDonated(\n            artistName,\n            allListeners[msg.sender].name,\n            msg.value\n        );\n    }\n\n    // fetch song details\n    function getSongDetails(uint256 _songID)\n        public\n        view\n        returns (\n            string memory,\n            string memory,\n            string memory,\n            string memory,\n            uint256,\n            uint256\n        )\n    {\n        return (\n            allSongs[_songID].songName,\n            allSongs[_songID].artistName,\n            allSongs[_songID].genre,\n            allSongs[_songID].hash,\n            allSongs[_songID].price,\n            timesSongPurchased[_songID]\n        );\n    }\n}\n",
  "sourcePath": "/home/nishavak/Documents/Codeshastra/Knack/contracts/Knack.sol",
  "ast": {
    "absolutePath": "project:/contracts/Knack.sol",
    "exportedSymbols": {
      "Knack": [
        610
      ]
    },
    "id": 611,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Knack",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 610,
        "linearizedBaseContracts": [
          610
        ],
        "name": "Knack",
        "nameLocation": "75:5:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "mutable",
            "name": "listenerIDTracker",
            "nameLocation": "120:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "112:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "112:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5,
            "mutability": "mutable",
            "name": "artistIDTracker",
            "nameLocation": "151:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "143:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "143:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "songIDTracker",
            "nameLocation": "180:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "172:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "172:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Knack.UserType",
            "id": 11,
            "members": [
              {
                "id": 8,
                "name": "UNDEFINED",
                "nameLocation": "241:9:0",
                "nodeType": "EnumValue",
                "src": "241:9:0"
              },
              {
                "id": 9,
                "name": "ARTIST",
                "nameLocation": "260:6:0",
                "nodeType": "EnumValue",
                "src": "260:6:0"
              },
              {
                "id": 10,
                "name": "LISTENER",
                "nameLocation": "276:8:0",
                "nodeType": "EnumValue",
                "src": "276:8:0"
              }
            ],
            "name": "UserType",
            "nameLocation": "222:8:0",
            "nodeType": "EnumDefinition",
            "src": "217:73:0"
          },
          {
            "canonicalName": "Knack.Artist",
            "id": 19,
            "members": [
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "349:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "342:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 12,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "342:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "artistID",
                "nameLocation": "371:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "363:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "363:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "songsPublished",
                "nameLocation": "399:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "389:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17,
                  "nodeType": "ArrayTypeName",
                  "src": "389:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Artist",
            "nameLocation": "325:6:0",
            "nodeType": "StructDefinition",
            "scope": 610,
            "src": "318:102:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Knack.Listener",
            "id": 31,
            "members": [
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "459:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "452:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 20,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "452:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "listenerID",
                "nameLocation": "481:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "473:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "473:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "songsPurchased",
                "nameLocation": "511:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "501:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25,
                  "nodeType": "ArrayTypeName",
                  "src": "501:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "isSongPurchased",
                "nameLocation": "560:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "535:40:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "typeName": {
                  "id": 29,
                  "keyType": {
                    "id": 27,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "543:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "535:24:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "valueType": {
                    "id": 28,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Listener",
            "nameLocation": "433:8:0",
            "nodeType": "StructDefinition",
            "scope": 610,
            "src": "426:156:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Knack.Song",
            "id": 46,
            "members": [
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "songName",
                "nameLocation": "645:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "638:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 32,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "638:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "artistName",
                "nameLocation": "670:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "663:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 34,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "663:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "genre",
                "nameLocation": "697:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "690:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 36,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "690:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "719:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "712:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 38,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "712:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "songID",
                "nameLocation": "741:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "733:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "733:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "765:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "757:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 42,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "757:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45,
                "mutability": "mutable",
                "name": "artistAddress",
                "nameLocation": "796:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "780:29:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 44,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "780:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Song",
            "nameLocation": "623:4:0",
            "nodeType": "StructDefinition",
            "scope": 610,
            "src": "616:200:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 51,
            "mutability": "mutable",
            "name": "identifyUser",
            "nameLocation": "867:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "838:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserType_$11_$",
              "typeString": "mapping(address => enum Knack.UserType)"
            },
            "typeName": {
              "id": 50,
              "keyType": {
                "id": 47,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "846:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "838:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserType_$11_$",
                "typeString": "mapping(address => enum Knack.UserType)"
              },
              "valueType": {
                "id": 49,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 48,
                  "name": "UserType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11,
                  "src": "857:8:0"
                },
                "referencedDeclaration": 11,
                "src": "857:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_UserType_$11",
                  "typeString": "enum Knack.UserType"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "allArtists",
            "nameLocation": "912:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "885:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$19_storage_$",
              "typeString": "mapping(address => struct Knack.Artist)"
            },
            "typeName": {
              "id": 55,
              "keyType": {
                "id": 52,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "893:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "885:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$19_storage_$",
                "typeString": "mapping(address => struct Knack.Artist)"
              },
              "valueType": {
                "id": 54,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 53,
                  "name": "Artist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19,
                  "src": "904:6:0"
                },
                "referencedDeclaration": 19,
                "src": "904:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Artist_$19_storage_ptr",
                  "typeString": "struct Knack.Artist"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 61,
            "mutability": "mutable",
            "name": "allListeners",
            "nameLocation": "957:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "928:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
              "typeString": "mapping(address => struct Knack.Listener)"
            },
            "typeName": {
              "id": 60,
              "keyType": {
                "id": 57,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "936:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "928:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                "typeString": "mapping(address => struct Knack.Listener)"
              },
              "valueType": {
                "id": 59,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 58,
                  "name": "Listener",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "947:8:0"
                },
                "referencedDeclaration": 31,
                "src": "947:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Listener_$31_storage_ptr",
                  "typeString": "struct Knack.Listener"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 66,
            "mutability": "mutable",
            "name": "allSongs",
            "nameLocation": "1000:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "975:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
              "typeString": "mapping(uint256 => struct Knack.Song)"
            },
            "typeName": {
              "id": 65,
              "keyType": {
                "id": 62,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "983:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "975:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
                "typeString": "mapping(uint256 => struct Knack.Song)"
              },
              "valueType": {
                "id": 64,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 63,
                  "name": "Song",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "994:4:0"
                },
                "referencedDeclaration": 46,
                "src": "994:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Song_$46_storage_ptr",
                  "typeString": "struct Knack.Song"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 70,
            "mutability": "mutable",
            "name": "timesSongPurchased",
            "nameLocation": "1042:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "1014:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 69,
              "keyType": {
                "id": 67,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1022:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1014:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 68,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1033:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 74,
            "mutability": "mutable",
            "name": "songHashUsed",
            "nameLocation": "1090:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "1066:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 73,
              "keyType": {
                "id": 71,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1074:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1066:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 72,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1084:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 78,
            "mutability": "mutable",
            "name": "getArtistAddress",
            "nameLocation": "1143:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "1108:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_payable_$",
              "typeString": "mapping(string => address payable)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1116:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1108:34:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_payable_$",
                "typeString": "mapping(string => address payable)"
              },
              "valueType": {
                "id": 76,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1126:15:0",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "1195:94:0",
              "statements": [
                {
                  "expression": {
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 81,
                      "name": "songIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "1205:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1221:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1205:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:17:0"
                },
                {
                  "expression": {
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85,
                      "name": "artistIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1232:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1250:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1232:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "1232:19:0"
                },
                {
                  "expression": {
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89,
                      "name": "listenerIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1261:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1281:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1261:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1261:21:0"
                }
              ]
            },
            "id": 94,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1192:2:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1195:0:0"
            },
            "scope": 610,
            "src": "1181:108:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1348:37:0",
              "statements": [
                {
                  "expression": {
                    "id": 99,
                    "name": "songIDTracker",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7,
                    "src": "1365:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 98,
                  "id": 100,
                  "nodeType": "Return",
                  "src": "1358:20:0"
                }
              ]
            },
            "functionSelector": "0c58d5b1",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumSongs",
            "nameLocation": "1304:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1315:2:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1339:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1339:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1338:9:0"
            },
            "scope": 610,
            "src": "1295:90:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1443:48:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 108,
                      "name": "identifyUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "1460:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserType_$11_$",
                        "typeString": "mapping(address => enum Knack.UserType)"
                      }
                    },
                    "id": 111,
                    "indexExpression": {
                      "expression": {
                        "id": 109,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1473:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1473:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1460:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserType_$11",
                      "typeString": "enum Knack.UserType"
                    }
                  },
                  "functionReturnParameters": 107,
                  "id": 112,
                  "nodeType": "Return",
                  "src": "1453:31:0"
                }
              ]
            },
            "functionSelector": "c1562547",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUser",
            "nameLocation": "1400:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1409:2:0"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1433:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_UserType_$11",
                    "typeString": "enum Knack.UserType"
                  },
                  "typeName": {
                    "id": 105,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 104,
                      "name": "UserType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11,
                      "src": "1433:8:0"
                    },
                    "referencedDeclaration": 11,
                    "src": "1433:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserType_$11",
                      "typeString": "enum Knack.UserType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1432:10:0"
            },
            "scope": 610,
            "src": "1391:100:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "1569:246:0",
              "statements": [
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 119,
                      "name": "listenerIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1579:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1600:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1579:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:22:0"
                },
                {
                  "assignments": [
                    125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 125,
                      "mutability": "mutable",
                      "name": "newListener",
                      "nameLocation": "1629:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 151,
                      "src": "1612:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Listener_$31_storage_ptr",
                        "typeString": "struct Knack.Listener"
                      },
                      "typeName": {
                        "id": 124,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 123,
                          "name": "Listener",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31,
                          "src": "1612:8:0"
                        },
                        "referencedDeclaration": 31,
                        "src": "1612:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Listener_$31_storage_ptr",
                          "typeString": "struct Knack.Listener"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 130,
                  "initialValue": {
                    "baseExpression": {
                      "id": 126,
                      "name": "allListeners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "1643:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                        "typeString": "mapping(address => struct Knack.Listener storage ref)"
                      }
                    },
                    "id": 129,
                    "indexExpression": {
                      "expression": {
                        "id": 127,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1656:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1656:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1643:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Listener_$31_storage",
                      "typeString": "struct Knack.Listener storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1612:55:0"
                },
                {
                  "expression": {
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 131,
                        "name": "newListener",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1677:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Listener_$31_storage_ptr",
                          "typeString": "struct Knack.Listener storage pointer"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "1677:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 134,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "1696:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1677:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1677:24:0"
                },
                {
                  "expression": {
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 137,
                        "name": "newListener",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1711:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Listener_$31_storage_ptr",
                          "typeString": "struct Knack.Listener storage pointer"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "listenerID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "1711:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 140,
                      "name": "listenerIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1736:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1711:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:42:0"
                },
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 143,
                        "name": "identifyUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1764:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserType_$11_$",
                          "typeString": "mapping(address => enum Knack.UserType)"
                        }
                      },
                      "id": 146,
                      "indexExpression": {
                        "expression": {
                          "id": 144,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1777:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1777:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1764:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserType_$11",
                        "typeString": "enum Knack.UserType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 147,
                        "name": "UserType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1791:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_UserType_$11_$",
                          "typeString": "type(enum Knack.UserType)"
                        }
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "LISTENER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "1791:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserType_$11",
                        "typeString": "enum Knack.UserType"
                      }
                    },
                    "src": "1764:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserType_$11",
                      "typeString": "enum Knack.UserType"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:44:0"
                }
              ]
            },
            "functionSelector": "62efa5f0",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewListener",
            "nameLocation": "1526:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1555:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1541:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1541:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1540:21:0"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1569:0:0"
            },
            "scope": 610,
            "src": "1517:298:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "1871:301:0",
              "statements": [
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 157,
                      "name": "artistIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1881:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1900:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1881:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1881:20:0"
                },
                {
                  "assignments": [
                    163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 163,
                      "mutability": "mutable",
                      "name": "newArtist",
                      "nameLocation": "1926:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 202,
                      "src": "1912:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Artist_$19_memory_ptr",
                        "typeString": "struct Knack.Artist"
                      },
                      "typeName": {
                        "id": 162,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 161,
                          "name": "Artist",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 19,
                          "src": "1912:6:0"
                        },
                        "referencedDeclaration": 19,
                        "src": "1912:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Artist_$19_storage_ptr",
                          "typeString": "struct Knack.Artist"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 164,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1912:23:0"
                },
                {
                  "expression": {
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 165,
                        "name": "newArtist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "1945:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Artist_$19_memory_ptr",
                          "typeString": "struct Knack.Artist memory"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "1945:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 168,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "1962:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1945:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:22:0"
                },
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 171,
                        "name": "newArtist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "1977:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Artist_$19_memory_ptr",
                          "typeString": "struct Knack.Artist memory"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "artistID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "1977:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 174,
                      "name": "artistIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1998:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1977:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "1977:36:0"
                },
                {
                  "expression": {
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 177,
                        "name": "getArtistAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "2023:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_payable_$",
                          "typeString": "mapping(string memory => address payable)"
                        }
                      },
                      "id": 179,
                      "indexExpression": {
                        "id": 178,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "2040:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2023:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 182,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2057:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2057:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2049:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 180,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2049:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2049:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2023:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2023:45:0"
                },
                {
                  "expression": {
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 187,
                        "name": "allArtists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "2079:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$19_storage_$",
                          "typeString": "mapping(address => struct Knack.Artist storage ref)"
                        }
                      },
                      "id": 190,
                      "indexExpression": {
                        "expression": {
                          "id": 188,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2090:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2090:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2079:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Artist_$19_storage",
                        "typeString": "struct Knack.Artist storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 191,
                      "name": "newArtist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "2104:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Artist_$19_memory_ptr",
                        "typeString": "struct Knack.Artist memory"
                      }
                    },
                    "src": "2079:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Artist_$19_storage",
                      "typeString": "struct Knack.Artist storage ref"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "2079:34:0"
                },
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 194,
                        "name": "identifyUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "2123:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserType_$11_$",
                          "typeString": "mapping(address => enum Knack.UserType)"
                        }
                      },
                      "id": 197,
                      "indexExpression": {
                        "expression": {
                          "id": 195,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2136:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2136:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2123:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserType_$11",
                        "typeString": "enum Knack.UserType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 198,
                        "name": "UserType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2150:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_UserType_$11_$",
                          "typeString": "type(enum Knack.UserType)"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ARTIST",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "2150:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserType_$11",
                        "typeString": "enum Knack.UserType"
                      }
                    },
                    "src": "2123:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserType_$11",
                      "typeString": "enum Knack.UserType"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "2123:42:0"
                }
              ]
            },
            "functionSelector": "42490c4b",
            "id": 203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewArtist",
            "nameLocation": "1830:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1857:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "1843:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1843:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1842:21:0"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1871:0:0"
            },
            "scope": 610,
            "src": "1821:351:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "2371:179:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 213,
                            "name": "allListeners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "2402:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                              "typeString": "mapping(address => struct Knack.Listener storage ref)"
                            }
                          },
                          "id": 216,
                          "indexExpression": {
                            "expression": {
                              "id": 214,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2415:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2415:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2402:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listener_$31_storage",
                            "typeString": "struct Knack.Listener storage ref"
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "2402:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 218,
                            "name": "allListeners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "2445:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                              "typeString": "mapping(address => struct Knack.Listener storage ref)"
                            }
                          },
                          "id": 221,
                          "indexExpression": {
                            "expression": {
                              "id": 219,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2458:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2458:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2445:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listener_$31_storage",
                            "typeString": "struct Knack.Listener storage ref"
                          }
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "listenerID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23,
                        "src": "2445:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 223,
                            "name": "allListeners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "2494:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                              "typeString": "mapping(address => struct Knack.Listener storage ref)"
                            }
                          },
                          "id": 226,
                          "indexExpression": {
                            "expression": {
                              "id": 224,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2507:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2507:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2494:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listener_$31_storage",
                            "typeString": "struct Knack.Listener storage ref"
                          }
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songsPurchased",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "2494:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      }
                    ],
                    "id": 228,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2388:155:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "tuple(string storage ref,uint256,uint256[] storage ref)"
                    }
                  },
                  "functionReturnParameters": 212,
                  "id": 229,
                  "nodeType": "Return",
                  "src": "2381:162:0"
                }
              ]
            },
            "functionSelector": "4effb50e",
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getListenerDetails",
            "nameLocation": "2213:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2231:2:0"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "2292:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2292:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "2319:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2319:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "2340:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 209,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2340:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 210,
                    "nodeType": "ArrayTypeName",
                    "src": "2340:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2278:88:0"
            },
            "scope": 610,
            "src": "2204:346:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "2721:171:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 241,
                            "name": "allArtists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "2752:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$19_storage_$",
                              "typeString": "mapping(address => struct Knack.Artist storage ref)"
                            }
                          },
                          "id": 244,
                          "indexExpression": {
                            "expression": {
                              "id": 242,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2763:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2763:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2752:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Artist_$19_storage",
                            "typeString": "struct Knack.Artist storage ref"
                          }
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "2752:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 246,
                            "name": "allArtists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "2793:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$19_storage_$",
                              "typeString": "mapping(address => struct Knack.Artist storage ref)"
                            }
                          },
                          "id": 249,
                          "indexExpression": {
                            "expression": {
                              "id": 247,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2804:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2804:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2793:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Artist_$19_storage",
                            "typeString": "struct Knack.Artist storage ref"
                          }
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "artistID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15,
                        "src": "2793:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 251,
                            "name": "allArtists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "2838:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$19_storage_$",
                              "typeString": "mapping(address => struct Knack.Artist storage ref)"
                            }
                          },
                          "id": 254,
                          "indexExpression": {
                            "expression": {
                              "id": 252,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2849:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2849:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2838:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Artist_$19_storage",
                            "typeString": "struct Knack.Artist storage ref"
                          }
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songsPublished",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "2838:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      }
                    ],
                    "id": 256,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2738:147:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "tuple(string storage ref,uint256,uint256[] storage ref)"
                    }
                  },
                  "functionReturnParameters": 240,
                  "id": 257,
                  "nodeType": "Return",
                  "src": "2731:154:0"
                }
              ]
            },
            "functionSelector": "7f7a4510",
            "id": 259,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getArtistDetails",
            "nameLocation": "2565:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2581:2:0"
            },
            "returnParameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "2642:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "2669:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2669:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "2690:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 237,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2690:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 238,
                    "nodeType": "ArrayTypeName",
                    "src": "2690:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2628:88:0"
            },
            "scope": 610,
            "src": "2556:336:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "8c6d5283b06a4f84805865678e0a51043ab4788bdd609db7c5cbe4c6fce5c97f",
            "id": 269,
            "name": "songAdded",
            "nameLocation": "2923:9:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "songID",
                  "nameLocation": "2950:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "2942:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2942:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 263,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "songName",
                  "nameLocation": "2973:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "2966:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2966:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 265,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "artistName",
                  "nameLocation": "2998:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "2991:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2991:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 267,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "3026:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "3018:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3018:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2932:105:0"
            },
            "src": "2917:121:0"
          },
          {
            "body": {
              "id": 395,
              "nodeType": "Block",
              "src": "3186:848:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_UserType_$11",
                          "typeString": "enum Knack.UserType"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 281,
                            "name": "identifyUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "3204:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserType_$11_$",
                              "typeString": "mapping(address => enum Knack.UserType)"
                            }
                          },
                          "id": 284,
                          "indexExpression": {
                            "expression": {
                              "id": 282,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3217:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3217:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3204:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserType_$11",
                            "typeString": "enum Knack.UserType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 285,
                            "name": "UserType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3232:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_UserType_$11_$",
                              "typeString": "type(enum Knack.UserType)"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ARTIST",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9,
                          "src": "3232:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserType_$11",
                            "typeString": "enum Knack.UserType"
                          }
                        },
                        "src": "3204:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616e206172746973742e",
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3249:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c2a2c55151697061ce1df6c55c874e20efd6df64d62288c126c45f45b39e7dd",
                          "typeString": "literal_string \"Not an artist.\""
                        },
                        "value": "Not an artist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c2a2c55151697061ce1df6c55c874e20efd6df64d62288c126c45f45b39e7dd",
                          "typeString": "literal_string \"Not an artist.\""
                        }
                      ],
                      "id": 280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3196:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3196:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "3196:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3284:20:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 292,
                            "name": "songHashUsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "3285:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 294,
                          "indexExpression": {
                            "id": 293,
                            "name": "_hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "3298:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3285:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4475706c6963617465206861736820686173206265656e2064657465637465642e",
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3306:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56ab5ac995d8d22b9db30e24405fe75a02abc80b941eede0f4484baa6dae0783",
                          "typeString": "literal_string \"Duplicate hash has been detected.\""
                        },
                        "value": "Duplicate hash has been detected."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56ab5ac995d8d22b9db30e24405fe75a02abc80b941eede0f4484baa6dae0783",
                          "typeString": "literal_string \"Duplicate hash has been detected.\""
                        }
                      ],
                      "id": 291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3276:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3276:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "3276:66:0"
                },
                {
                  "expression": {
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 299,
                      "name": "songIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "3353:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3370:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3353:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "3353:18:0"
                },
                {
                  "assignments": [
                    305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 305,
                      "mutability": "mutable",
                      "name": "newSong",
                      "nameLocation": "3394:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 395,
                      "src": "3382:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                        "typeString": "struct Knack.Song"
                      },
                      "typeName": {
                        "id": 304,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 303,
                          "name": "Song",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46,
                          "src": "3382:4:0"
                        },
                        "referencedDeclaration": 46,
                        "src": "3382:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_storage_ptr",
                          "typeString": "struct Knack.Song"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 306,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3382:19:0"
                },
                {
                  "expression": {
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 307,
                        "name": "newSong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "3411:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                          "typeString": "struct Knack.Song memory"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "songID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "3411:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 310,
                      "name": "songIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "3428:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3411:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "3411:30:0"
                },
                {
                  "expression": {
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 313,
                        "name": "newSong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "3451:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                          "typeString": "struct Knack.Song memory"
                        }
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "songName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "3451:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 316,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "3470:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3451:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "3451:24:0"
                },
                {
                  "expression": {
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 319,
                        "name": "newSong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "3485:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                          "typeString": "struct Knack.Song memory"
                        }
                      },
                      "id": 321,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "artistName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "3485:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 322,
                          "name": "allArtists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "3506:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$19_storage_$",
                            "typeString": "mapping(address => struct Knack.Artist storage ref)"
                          }
                        },
                        "id": 325,
                        "indexExpression": {
                          "expression": {
                            "id": 323,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3517:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3517:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3506:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Artist_$19_storage",
                          "typeString": "struct Knack.Artist storage ref"
                        }
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "3506:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "3485:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "3485:48:0"
                },
                {
                  "expression": {
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 329,
                        "name": "newSong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "3543:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                          "typeString": "struct Knack.Song memory"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "genre",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "3543:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 332,
                      "name": "_genre",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "3559:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3543:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "3543:22:0"
                },
                {
                  "expression": {
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 335,
                        "name": "newSong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "3575:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                          "typeString": "struct Knack.Song memory"
                        }
                      },
                      "id": 337,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "3575:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 338,
                      "name": "_hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "3590:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3575:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "3575:20:0"
                },
                {
                  "expression": {
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 341,
                        "name": "newSong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "3605:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                          "typeString": "struct Knack.Song memory"
                        }
                      },
                      "id": 343,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "3605:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 344,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "3621:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3605:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "3605:22:0"
                },
                {
                  "expression": {
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 347,
                        "name": "newSong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "3637:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                          "typeString": "struct Knack.Song memory"
                        }
                      },
                      "id": 349,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "artistAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "3637:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 352,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3669:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3669:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3661:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3661:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3661:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3637:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "3637:43:0"
                },
                {
                  "expression": {
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 357,
                        "name": "timesSongPurchased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "3691:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 359,
                      "indexExpression": {
                        "id": 358,
                        "name": "songIDTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3710:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3691:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3727:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3691:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "3691:37:0"
                },
                {
                  "expression": {
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 363,
                        "name": "allSongs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "3739:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
                          "typeString": "mapping(uint256 => struct Knack.Song storage ref)"
                        }
                      },
                      "id": 365,
                      "indexExpression": {
                        "id": 364,
                        "name": "songIDTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3748:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3739:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Song_$46_storage",
                        "typeString": "struct Knack.Song storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 366,
                      "name": "newSong",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "3765:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                        "typeString": "struct Knack.Song memory"
                      }
                    },
                    "src": "3739:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Song_$46_storage",
                      "typeString": "struct Knack.Song storage ref"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "3739:33:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 375,
                        "name": "songIDTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3825:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 369,
                            "name": "allArtists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "3782:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$19_storage_$",
                              "typeString": "mapping(address => struct Knack.Artist storage ref)"
                            }
                          },
                          "id": 372,
                          "indexExpression": {
                            "expression": {
                              "id": 370,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3793:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3793:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3782:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Artist_$19_storage",
                            "typeString": "struct Knack.Artist storage ref"
                          }
                        },
                        "id": 373,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songsPublished",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "3782:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3782:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3782:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "3782:57:0"
                },
                {
                  "expression": {
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 378,
                        "name": "songHashUsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "3849:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 380,
                      "indexExpression": {
                        "id": 379,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "3862:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3849:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3871:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3849:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "3849:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 385,
                          "name": "newSong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "3914:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                            "typeString": "struct Knack.Song memory"
                          }
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41,
                        "src": "3914:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 387,
                          "name": "newSong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "3942:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                            "typeString": "struct Knack.Song memory"
                          }
                        },
                        "id": 388,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33,
                        "src": "3942:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 389,
                          "name": "newSong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "3972:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                            "typeString": "struct Knack.Song memory"
                          }
                        },
                        "id": 390,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "artistName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35,
                        "src": "3972:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 391,
                          "name": "newSong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "4004:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                            "typeString": "struct Knack.Song memory"
                          }
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "4004:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 384,
                      "name": "songAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "3891:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,string memory,string memory,uint256)"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3891:136:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "EmitStatement",
                  "src": "3886:141:0"
                }
              ]
            },
            "functionSelector": "f29b4165",
            "id": 396,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSong",
            "nameLocation": "3053:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3084:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "3070:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3070:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 273,
                  "mutability": "mutable",
                  "name": "_genre",
                  "nameLocation": "3113:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "3099:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3099:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "3143:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "3129:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3129:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "3166:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "3158:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3158:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3060:118:0"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3186:0:0"
            },
            "scope": 610,
            "src": "3044:990:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "4d5d3c0b738fd8f4b26fa11966a64c4b072cb5837aadaf02808df71f883a5d51",
            "id": 406,
            "name": "songPurchased",
            "nameLocation": "4062:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "songID",
                  "nameLocation": "4093:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4085:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4085:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 400,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "songName",
                  "nameLocation": "4116:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4109:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4109:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 402,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listenerName",
                  "nameLocation": "4141:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4134:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4134:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "4171:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4163:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4163:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4075:107:0"
            },
            "src": "4056:127:0"
          },
          {
            "body": {
              "id": 511,
              "nodeType": "Block",
              "src": "4238:958:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_UserType_$11",
                          "typeString": "enum Knack.UserType"
                        },
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 412,
                            "name": "identifyUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "4269:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserType_$11_$",
                              "typeString": "mapping(address => enum Knack.UserType)"
                            }
                          },
                          "id": 415,
                          "indexExpression": {
                            "expression": {
                              "id": 413,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4282:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4282:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4269:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserType_$11",
                            "typeString": "enum Knack.UserType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 416,
                            "name": "UserType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "4297:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_UserType_$11_$",
                              "typeString": "type(enum Knack.UserType)"
                            }
                          },
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "LISTENER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "4297:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserType_$11",
                            "typeString": "enum Knack.UserType"
                          }
                        },
                        "src": "4269:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061206c697374656e65722070726f66696c652e",
                        "id": 419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4328:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9",
                          "typeString": "literal_string \"Not a listener profile.\""
                        },
                        "value": "Not a listener profile."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9",
                          "typeString": "literal_string \"Not a listener profile.\""
                        }
                      ],
                      "id": 411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4248:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4248:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 421,
                  "nodeType": "ExpressionStatement",
                  "src": "4248:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4394:50:0",
                        "subExpression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 423,
                                "name": "allListeners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61,
                                "src": "4395:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                                  "typeString": "mapping(address => struct Knack.Listener storage ref)"
                                }
                              },
                              "id": 426,
                              "indexExpression": {
                                "expression": {
                                  "id": 424,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4408:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4408:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4395:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Listener_$31_storage",
                                "typeString": "struct Knack.Listener storage ref"
                              }
                            },
                            "id": 427,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isSongPurchased",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "4395:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 429,
                          "indexExpression": {
                            "id": 428,
                            "name": "_songID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 408,
                            "src": "4436:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4395:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f6e6720616c7265616479207075726368617365642e",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4458:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_05aed2d161079a02033540553bee7e5fd7458a6772cb0cc85a08e034153194d8",
                          "typeString": "literal_string \"Song already purchased.\""
                        },
                        "value": "Song already purchased."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_05aed2d161079a02033540553bee7e5fd7458a6772cb0cc85a08e034153194d8",
                          "typeString": "literal_string \"Song already purchased.\""
                        }
                      ],
                      "id": 422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4373:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4373:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "4373:120:0"
                },
                {
                  "assignments": [
                    436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 436,
                      "mutability": "mutable",
                      "name": "curSong",
                      "nameLocation": "4516:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 511,
                      "src": "4504:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                        "typeString": "struct Knack.Song"
                      },
                      "typeName": {
                        "id": 435,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 434,
                          "name": "Song",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46,
                          "src": "4504:4:0"
                        },
                        "referencedDeclaration": 46,
                        "src": "4504:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_storage_ptr",
                          "typeString": "struct Knack.Song"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 440,
                  "initialValue": {
                    "baseExpression": {
                      "id": 437,
                      "name": "allSongs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "4526:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
                        "typeString": "mapping(uint256 => struct Knack.Song storage ref)"
                      }
                    },
                    "id": 439,
                    "indexExpression": {
                      "id": 438,
                      "name": "_songID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "4535:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4526:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Song_$46_storage",
                      "typeString": "struct Knack.Song storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4504:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 442,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4575:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4575:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 444,
                                  "name": "curSong",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 436,
                                  "src": "4589:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                                    "typeString": "struct Knack.Song memory"
                                  }
                                },
                                "id": 445,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 43,
                                "src": "4589:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4605:5:0",
                                "subdenomination": "wei",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "4589:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 448,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4588:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4575:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420706179656420646f6573206e6f74206d61746368207072696365206f662074686520736f6e672e",
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4625:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_503763d64011defe79f0d5161c938235b522eb0e0e6f987bd08b88e3af5a03dd",
                          "typeString": "literal_string \"Amount payed does not match price of the song.\""
                        },
                        "value": "Amount payed does not match price of the song."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_503763d64011defe79f0d5161c938235b522eb0e0e6f987bd08b88e3af5a03dd",
                          "typeString": "literal_string \"Amount payed does not match price of the song.\""
                        }
                      ],
                      "id": 441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4554:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4554:129:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "4554:129:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 454,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4714:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4714:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "4714:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 457,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4735:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4735:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4714:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e636520746f2070726f636565642e",
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4758:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a",
                          "typeString": "literal_string \"Insufficient balance to proceed.\""
                        },
                        "value": "Insufficient balance to proceed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a",
                          "typeString": "literal_string \"Insufficient balance to proceed.\""
                        }
                      ],
                      "id": 453,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4693:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4693:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "4693:109:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 468,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4844:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "4844:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 463,
                          "name": "curSong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 436,
                          "src": "4813:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                            "typeString": "struct Knack.Song memory"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "artistAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45,
                        "src": "4813:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4813:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4813:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "4813:41:0"
                },
                {
                  "expression": {
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 472,
                        "name": "timesSongPurchased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "4864:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 474,
                      "indexExpression": {
                        "id": 473,
                        "name": "_songID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "4883:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4864:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4895:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4864:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "4864:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 484,
                        "name": "_songID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "4952:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 478,
                            "name": "allListeners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "4907:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                              "typeString": "mapping(address => struct Knack.Listener storage ref)"
                            }
                          },
                          "id": 481,
                          "indexExpression": {
                            "expression": {
                              "id": 479,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4920:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4920:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4907:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listener_$31_storage",
                            "typeString": "struct Knack.Listener storage ref"
                          }
                        },
                        "id": 482,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songsPurchased",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "4907:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4907:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4907:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "4907:53:0"
                },
                {
                  "expression": {
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 487,
                            "name": "allListeners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "4970:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                              "typeString": "mapping(address => struct Knack.Listener storage ref)"
                            }
                          },
                          "id": 490,
                          "indexExpression": {
                            "expression": {
                              "id": 488,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4983:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4983:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4970:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listener_$31_storage",
                            "typeString": "struct Knack.Listener storage ref"
                          }
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSongPurchased",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "4970:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 493,
                      "indexExpression": {
                        "id": 492,
                        "name": "_songID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "5011:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4970:49:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5022:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4970:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 496,
                  "nodeType": "ExpressionStatement",
                  "src": "4970:56:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 498,
                          "name": "curSong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 436,
                          "src": "5069:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                            "typeString": "struct Knack.Song memory"
                          }
                        },
                        "id": 499,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41,
                        "src": "5069:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 500,
                          "name": "curSong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 436,
                          "src": "5097:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                            "typeString": "struct Knack.Song memory"
                          }
                        },
                        "id": 501,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33,
                        "src": "5097:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 502,
                            "name": "allListeners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "5127:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                              "typeString": "mapping(address => struct Knack.Listener storage ref)"
                            }
                          },
                          "id": 505,
                          "indexExpression": {
                            "expression": {
                              "id": 503,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5140:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5140:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5127:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listener_$31_storage",
                            "typeString": "struct Knack.Listener storage ref"
                          }
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "5127:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 507,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5170:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "5170:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 497,
                      "name": "songPurchased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 406,
                      "src": "5042:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,string memory,string memory,uint256)"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5042:147:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 510,
                  "nodeType": "EmitStatement",
                  "src": "5037:152:0"
                }
              ]
            },
            "functionSelector": "606a0175",
            "id": 512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buySong",
            "nameLocation": "4198:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "_songID",
                  "nameLocation": "4214:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "4206:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4206:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4205:17:0"
            },
            "returnParameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4238:0:0"
            },
            "scope": 610,
            "src": "4189:1007:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "19fc7073cff31b76fe0bf3c801e7fe11652310c62d0c225a9995a5d30940c648",
            "id": 520,
            "name": "artistDonated",
            "nameLocation": "5242:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "artistName",
                  "nameLocation": "5263:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "5256:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5256:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listenerName",
                  "nameLocation": "5282:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "5275:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5275:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5304:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "5296:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5296:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5255:56:0"
            },
            "src": "5236:76:0"
          },
          {
            "body": {
              "id": 565,
              "nodeType": "Block",
              "src": "5381:439:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_UserType_$11",
                          "typeString": "enum Knack.UserType"
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 526,
                            "name": "identifyUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "5412:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserType_$11_$",
                              "typeString": "mapping(address => enum Knack.UserType)"
                            }
                          },
                          "id": 529,
                          "indexExpression": {
                            "expression": {
                              "id": 527,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5425:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5425:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5412:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserType_$11",
                            "typeString": "enum Knack.UserType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 530,
                            "name": "UserType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "5440:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_UserType_$11_$",
                              "typeString": "type(enum Knack.UserType)"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "LISTENER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "5440:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserType_$11",
                            "typeString": "enum Knack.UserType"
                          }
                        },
                        "src": "5412:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061206c697374656e65722070726f66696c652e",
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5471:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9",
                          "typeString": "literal_string \"Not a listener profile.\""
                        },
                        "value": "Not a listener profile."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9",
                          "typeString": "literal_string \"Not a listener profile.\""
                        }
                      ],
                      "id": 525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5391:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5391:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "5391:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 537,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5537:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5537:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "5537:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 540,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5558:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5558:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5537:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e636520746f2070726f636565642e",
                        "id": 543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5581:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a",
                          "typeString": "literal_string \"Insufficient balance to proceed.\""
                        },
                        "value": "Insufficient balance to proceed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a",
                          "typeString": "literal_string \"Insufficient balance to proceed.\""
                        }
                      ],
                      "id": 536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5516:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5516:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "5516:109:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 550,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5674:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "5674:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 546,
                          "name": "getArtistAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "5636:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_payable_$",
                            "typeString": "mapping(string memory => address payable)"
                          }
                        },
                        "id": 548,
                        "indexExpression": {
                          "id": 547,
                          "name": "artistName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "5653:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5636:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5636:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5636:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "5636:48:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 555,
                        "name": "artistName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "5727:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 556,
                            "name": "allListeners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "5751:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                              "typeString": "mapping(address => struct Knack.Listener storage ref)"
                            }
                          },
                          "id": 559,
                          "indexExpression": {
                            "expression": {
                              "id": 557,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5764:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5764:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5751:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listener_$31_storage",
                            "typeString": "struct Knack.Listener storage ref"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "5751:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 561,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5794:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "5794:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 554,
                      "name": "artistDonated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "5700:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256)"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5700:113:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 564,
                  "nodeType": "EmitStatement",
                  "src": "5695:118:0"
                }
              ]
            },
            "functionSelector": "dc4b0291",
            "id": 566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "donateArtist",
            "nameLocation": "5327:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "artistName",
                  "nameLocation": "5354:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 566,
                  "src": "5340:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5340:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5339:26:0"
            },
            "returnParameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5381:0:0"
            },
            "scope": 610,
            "src": "5318:502:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 608,
              "nodeType": "Block",
              "src": "6102:267:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 583,
                            "name": "allSongs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "6133:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
                              "typeString": "mapping(uint256 => struct Knack.Song storage ref)"
                            }
                          },
                          "id": 585,
                          "indexExpression": {
                            "id": 584,
                            "name": "_songID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "6142:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6133:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_storage",
                            "typeString": "struct Knack.Song storage ref"
                          }
                        },
                        "id": 586,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33,
                        "src": "6133:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 587,
                            "name": "allSongs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "6173:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
                              "typeString": "mapping(uint256 => struct Knack.Song storage ref)"
                            }
                          },
                          "id": 589,
                          "indexExpression": {
                            "id": 588,
                            "name": "_songID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "6182:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6173:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_storage",
                            "typeString": "struct Knack.Song storage ref"
                          }
                        },
                        "id": 590,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "artistName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35,
                        "src": "6173:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 591,
                            "name": "allSongs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "6215:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
                              "typeString": "mapping(uint256 => struct Knack.Song storage ref)"
                            }
                          },
                          "id": 593,
                          "indexExpression": {
                            "id": 592,
                            "name": "_songID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "6224:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6215:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_storage",
                            "typeString": "struct Knack.Song storage ref"
                          }
                        },
                        "id": 594,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "genre",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37,
                        "src": "6215:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 595,
                            "name": "allSongs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "6252:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
                              "typeString": "mapping(uint256 => struct Knack.Song storage ref)"
                            }
                          },
                          "id": 597,
                          "indexExpression": {
                            "id": 596,
                            "name": "_songID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "6261:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6252:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_storage",
                            "typeString": "struct Knack.Song storage ref"
                          }
                        },
                        "id": 598,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39,
                        "src": "6252:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 599,
                            "name": "allSongs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "6288:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
                              "typeString": "mapping(uint256 => struct Knack.Song storage ref)"
                            }
                          },
                          "id": 601,
                          "indexExpression": {
                            "id": 600,
                            "name": "_songID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "6297:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6288:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_storage",
                            "typeString": "struct Knack.Song storage ref"
                          }
                        },
                        "id": 602,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "6288:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 603,
                          "name": "timesSongPurchased",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "6325:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 605,
                        "indexExpression": {
                          "id": 604,
                          "name": "_songID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 568,
                          "src": "6344:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6325:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 606,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6119:243:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(string storage ref,string storage ref,string storage ref,string storage ref,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 582,
                  "id": 607,
                  "nodeType": "Return",
                  "src": "6112:250:0"
                }
              ]
            },
            "functionSelector": "77822fc2",
            "id": 609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSongDetails",
            "nameLocation": "5861:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 568,
                  "mutability": "mutable",
                  "name": "_songID",
                  "nameLocation": "5884:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "5876:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5876:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5875:17:0"
            },
            "returnParameters": {
              "id": 582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 571,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "5951:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5951:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 573,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "5978:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5978:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 575,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "6005:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6005:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 577,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "6032:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6032:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 579,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "6059:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6059:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 581,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "6080:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6080:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5937:160:0"
            },
            "scope": 610,
            "src": "5852:517:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 611,
        "src": "66:6305:0",
        "usedErrors": []
      }
    ],
    "src": "32:6340:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Knack.sol",
    "exportedSymbols": {
      "Knack": [
        610
      ]
    },
    "id": 611,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Knack",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 610,
        "linearizedBaseContracts": [
          610
        ],
        "name": "Knack",
        "nameLocation": "75:5:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "mutable",
            "name": "listenerIDTracker",
            "nameLocation": "120:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "112:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "112:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5,
            "mutability": "mutable",
            "name": "artistIDTracker",
            "nameLocation": "151:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "143:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "143:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "songIDTracker",
            "nameLocation": "180:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "172:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "172:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Knack.UserType",
            "id": 11,
            "members": [
              {
                "id": 8,
                "name": "UNDEFINED",
                "nameLocation": "241:9:0",
                "nodeType": "EnumValue",
                "src": "241:9:0"
              },
              {
                "id": 9,
                "name": "ARTIST",
                "nameLocation": "260:6:0",
                "nodeType": "EnumValue",
                "src": "260:6:0"
              },
              {
                "id": 10,
                "name": "LISTENER",
                "nameLocation": "276:8:0",
                "nodeType": "EnumValue",
                "src": "276:8:0"
              }
            ],
            "name": "UserType",
            "nameLocation": "222:8:0",
            "nodeType": "EnumDefinition",
            "src": "217:73:0"
          },
          {
            "canonicalName": "Knack.Artist",
            "id": 19,
            "members": [
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "349:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "342:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 12,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "342:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "artistID",
                "nameLocation": "371:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "363:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "363:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "songsPublished",
                "nameLocation": "399:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "389:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17,
                  "nodeType": "ArrayTypeName",
                  "src": "389:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Artist",
            "nameLocation": "325:6:0",
            "nodeType": "StructDefinition",
            "scope": 610,
            "src": "318:102:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Knack.Listener",
            "id": 31,
            "members": [
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "459:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "452:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 20,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "452:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "listenerID",
                "nameLocation": "481:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "473:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "473:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "songsPurchased",
                "nameLocation": "511:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "501:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25,
                  "nodeType": "ArrayTypeName",
                  "src": "501:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "isSongPurchased",
                "nameLocation": "560:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "535:40:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "typeName": {
                  "id": 29,
                  "keyType": {
                    "id": 27,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "543:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "535:24:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "valueType": {
                    "id": 28,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Listener",
            "nameLocation": "433:8:0",
            "nodeType": "StructDefinition",
            "scope": 610,
            "src": "426:156:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Knack.Song",
            "id": 46,
            "members": [
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "songName",
                "nameLocation": "645:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "638:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 32,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "638:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "artistName",
                "nameLocation": "670:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "663:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 34,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "663:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "genre",
                "nameLocation": "697:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "690:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 36,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "690:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "719:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "712:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 38,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "712:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "songID",
                "nameLocation": "741:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "733:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "733:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "765:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "757:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 42,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "757:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45,
                "mutability": "mutable",
                "name": "artistAddress",
                "nameLocation": "796:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "780:29:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 44,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "780:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Song",
            "nameLocation": "623:4:0",
            "nodeType": "StructDefinition",
            "scope": 610,
            "src": "616:200:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 51,
            "mutability": "mutable",
            "name": "identifyUser",
            "nameLocation": "867:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "838:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserType_$11_$",
              "typeString": "mapping(address => enum Knack.UserType)"
            },
            "typeName": {
              "id": 50,
              "keyType": {
                "id": 47,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "846:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "838:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserType_$11_$",
                "typeString": "mapping(address => enum Knack.UserType)"
              },
              "valueType": {
                "id": 49,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 48,
                  "name": "UserType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11,
                  "src": "857:8:0"
                },
                "referencedDeclaration": 11,
                "src": "857:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_UserType_$11",
                  "typeString": "enum Knack.UserType"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "allArtists",
            "nameLocation": "912:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "885:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$19_storage_$",
              "typeString": "mapping(address => struct Knack.Artist)"
            },
            "typeName": {
              "id": 55,
              "keyType": {
                "id": 52,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "893:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "885:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$19_storage_$",
                "typeString": "mapping(address => struct Knack.Artist)"
              },
              "valueType": {
                "id": 54,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 53,
                  "name": "Artist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19,
                  "src": "904:6:0"
                },
                "referencedDeclaration": 19,
                "src": "904:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Artist_$19_storage_ptr",
                  "typeString": "struct Knack.Artist"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 61,
            "mutability": "mutable",
            "name": "allListeners",
            "nameLocation": "957:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "928:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
              "typeString": "mapping(address => struct Knack.Listener)"
            },
            "typeName": {
              "id": 60,
              "keyType": {
                "id": 57,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "936:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "928:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                "typeString": "mapping(address => struct Knack.Listener)"
              },
              "valueType": {
                "id": 59,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 58,
                  "name": "Listener",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "947:8:0"
                },
                "referencedDeclaration": 31,
                "src": "947:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Listener_$31_storage_ptr",
                  "typeString": "struct Knack.Listener"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 66,
            "mutability": "mutable",
            "name": "allSongs",
            "nameLocation": "1000:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "975:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
              "typeString": "mapping(uint256 => struct Knack.Song)"
            },
            "typeName": {
              "id": 65,
              "keyType": {
                "id": 62,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "983:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "975:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
                "typeString": "mapping(uint256 => struct Knack.Song)"
              },
              "valueType": {
                "id": 64,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 63,
                  "name": "Song",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "994:4:0"
                },
                "referencedDeclaration": 46,
                "src": "994:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Song_$46_storage_ptr",
                  "typeString": "struct Knack.Song"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 70,
            "mutability": "mutable",
            "name": "timesSongPurchased",
            "nameLocation": "1042:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "1014:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 69,
              "keyType": {
                "id": 67,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1022:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1014:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 68,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1033:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 74,
            "mutability": "mutable",
            "name": "songHashUsed",
            "nameLocation": "1090:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "1066:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 73,
              "keyType": {
                "id": 71,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1074:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1066:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 72,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1084:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 78,
            "mutability": "mutable",
            "name": "getArtistAddress",
            "nameLocation": "1143:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "1108:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_payable_$",
              "typeString": "mapping(string => address payable)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1116:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1108:34:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_payable_$",
                "typeString": "mapping(string => address payable)"
              },
              "valueType": {
                "id": 76,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1126:15:0",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "1195:94:0",
              "statements": [
                {
                  "expression": {
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 81,
                      "name": "songIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "1205:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1221:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1205:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:17:0"
                },
                {
                  "expression": {
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85,
                      "name": "artistIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1232:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1250:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1232:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "1232:19:0"
                },
                {
                  "expression": {
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89,
                      "name": "listenerIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1261:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1281:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1261:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1261:21:0"
                }
              ]
            },
            "id": 94,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1192:2:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1195:0:0"
            },
            "scope": 610,
            "src": "1181:108:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1348:37:0",
              "statements": [
                {
                  "expression": {
                    "id": 99,
                    "name": "songIDTracker",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7,
                    "src": "1365:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 98,
                  "id": 100,
                  "nodeType": "Return",
                  "src": "1358:20:0"
                }
              ]
            },
            "functionSelector": "0c58d5b1",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumSongs",
            "nameLocation": "1304:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1315:2:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1339:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1339:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1338:9:0"
            },
            "scope": 610,
            "src": "1295:90:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1443:48:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 108,
                      "name": "identifyUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "1460:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserType_$11_$",
                        "typeString": "mapping(address => enum Knack.UserType)"
                      }
                    },
                    "id": 111,
                    "indexExpression": {
                      "expression": {
                        "id": 109,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1473:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1473:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1460:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserType_$11",
                      "typeString": "enum Knack.UserType"
                    }
                  },
                  "functionReturnParameters": 107,
                  "id": 112,
                  "nodeType": "Return",
                  "src": "1453:31:0"
                }
              ]
            },
            "functionSelector": "c1562547",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUser",
            "nameLocation": "1400:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1409:2:0"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1433:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_UserType_$11",
                    "typeString": "enum Knack.UserType"
                  },
                  "typeName": {
                    "id": 105,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 104,
                      "name": "UserType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11,
                      "src": "1433:8:0"
                    },
                    "referencedDeclaration": 11,
                    "src": "1433:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserType_$11",
                      "typeString": "enum Knack.UserType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1432:10:0"
            },
            "scope": 610,
            "src": "1391:100:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "1569:246:0",
              "statements": [
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 119,
                      "name": "listenerIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1579:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1600:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1579:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:22:0"
                },
                {
                  "assignments": [
                    125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 125,
                      "mutability": "mutable",
                      "name": "newListener",
                      "nameLocation": "1629:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 151,
                      "src": "1612:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Listener_$31_storage_ptr",
                        "typeString": "struct Knack.Listener"
                      },
                      "typeName": {
                        "id": 124,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 123,
                          "name": "Listener",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31,
                          "src": "1612:8:0"
                        },
                        "referencedDeclaration": 31,
                        "src": "1612:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Listener_$31_storage_ptr",
                          "typeString": "struct Knack.Listener"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 130,
                  "initialValue": {
                    "baseExpression": {
                      "id": 126,
                      "name": "allListeners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "1643:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                        "typeString": "mapping(address => struct Knack.Listener storage ref)"
                      }
                    },
                    "id": 129,
                    "indexExpression": {
                      "expression": {
                        "id": 127,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1656:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1656:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1643:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Listener_$31_storage",
                      "typeString": "struct Knack.Listener storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1612:55:0"
                },
                {
                  "expression": {
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 131,
                        "name": "newListener",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1677:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Listener_$31_storage_ptr",
                          "typeString": "struct Knack.Listener storage pointer"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "1677:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 134,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "1696:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1677:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1677:24:0"
                },
                {
                  "expression": {
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 137,
                        "name": "newListener",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1711:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Listener_$31_storage_ptr",
                          "typeString": "struct Knack.Listener storage pointer"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "listenerID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "1711:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 140,
                      "name": "listenerIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1736:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1711:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:42:0"
                },
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 143,
                        "name": "identifyUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1764:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserType_$11_$",
                          "typeString": "mapping(address => enum Knack.UserType)"
                        }
                      },
                      "id": 146,
                      "indexExpression": {
                        "expression": {
                          "id": 144,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1777:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1777:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1764:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserType_$11",
                        "typeString": "enum Knack.UserType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 147,
                        "name": "UserType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1791:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_UserType_$11_$",
                          "typeString": "type(enum Knack.UserType)"
                        }
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "LISTENER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "1791:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserType_$11",
                        "typeString": "enum Knack.UserType"
                      }
                    },
                    "src": "1764:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserType_$11",
                      "typeString": "enum Knack.UserType"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:44:0"
                }
              ]
            },
            "functionSelector": "62efa5f0",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewListener",
            "nameLocation": "1526:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1555:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1541:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1541:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1540:21:0"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1569:0:0"
            },
            "scope": 610,
            "src": "1517:298:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "1871:301:0",
              "statements": [
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 157,
                      "name": "artistIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1881:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1900:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1881:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1881:20:0"
                },
                {
                  "assignments": [
                    163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 163,
                      "mutability": "mutable",
                      "name": "newArtist",
                      "nameLocation": "1926:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 202,
                      "src": "1912:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Artist_$19_memory_ptr",
                        "typeString": "struct Knack.Artist"
                      },
                      "typeName": {
                        "id": 162,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 161,
                          "name": "Artist",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 19,
                          "src": "1912:6:0"
                        },
                        "referencedDeclaration": 19,
                        "src": "1912:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Artist_$19_storage_ptr",
                          "typeString": "struct Knack.Artist"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 164,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1912:23:0"
                },
                {
                  "expression": {
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 165,
                        "name": "newArtist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "1945:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Artist_$19_memory_ptr",
                          "typeString": "struct Knack.Artist memory"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "1945:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 168,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "1962:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1945:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:22:0"
                },
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 171,
                        "name": "newArtist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "1977:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Artist_$19_memory_ptr",
                          "typeString": "struct Knack.Artist memory"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "artistID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "1977:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 174,
                      "name": "artistIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1998:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1977:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "1977:36:0"
                },
                {
                  "expression": {
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 177,
                        "name": "getArtistAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "2023:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_payable_$",
                          "typeString": "mapping(string memory => address payable)"
                        }
                      },
                      "id": 179,
                      "indexExpression": {
                        "id": 178,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "2040:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2023:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 182,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2057:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2057:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2049:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 180,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2049:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2049:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2023:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2023:45:0"
                },
                {
                  "expression": {
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 187,
                        "name": "allArtists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "2079:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$19_storage_$",
                          "typeString": "mapping(address => struct Knack.Artist storage ref)"
                        }
                      },
                      "id": 190,
                      "indexExpression": {
                        "expression": {
                          "id": 188,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2090:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2090:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2079:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Artist_$19_storage",
                        "typeString": "struct Knack.Artist storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 191,
                      "name": "newArtist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "2104:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Artist_$19_memory_ptr",
                        "typeString": "struct Knack.Artist memory"
                      }
                    },
                    "src": "2079:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Artist_$19_storage",
                      "typeString": "struct Knack.Artist storage ref"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "2079:34:0"
                },
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 194,
                        "name": "identifyUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "2123:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserType_$11_$",
                          "typeString": "mapping(address => enum Knack.UserType)"
                        }
                      },
                      "id": 197,
                      "indexExpression": {
                        "expression": {
                          "id": 195,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2136:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2136:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2123:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserType_$11",
                        "typeString": "enum Knack.UserType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 198,
                        "name": "UserType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2150:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_UserType_$11_$",
                          "typeString": "type(enum Knack.UserType)"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ARTIST",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "2150:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserType_$11",
                        "typeString": "enum Knack.UserType"
                      }
                    },
                    "src": "2123:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserType_$11",
                      "typeString": "enum Knack.UserType"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "2123:42:0"
                }
              ]
            },
            "functionSelector": "42490c4b",
            "id": 203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewArtist",
            "nameLocation": "1830:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1857:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "1843:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1843:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1842:21:0"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1871:0:0"
            },
            "scope": 610,
            "src": "1821:351:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "2371:179:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 213,
                            "name": "allListeners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "2402:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                              "typeString": "mapping(address => struct Knack.Listener storage ref)"
                            }
                          },
                          "id": 216,
                          "indexExpression": {
                            "expression": {
                              "id": 214,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2415:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2415:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2402:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listener_$31_storage",
                            "typeString": "struct Knack.Listener storage ref"
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "2402:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 218,
                            "name": "allListeners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "2445:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                              "typeString": "mapping(address => struct Knack.Listener storage ref)"
                            }
                          },
                          "id": 221,
                          "indexExpression": {
                            "expression": {
                              "id": 219,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2458:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2458:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2445:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listener_$31_storage",
                            "typeString": "struct Knack.Listener storage ref"
                          }
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "listenerID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23,
                        "src": "2445:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 223,
                            "name": "allListeners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "2494:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                              "typeString": "mapping(address => struct Knack.Listener storage ref)"
                            }
                          },
                          "id": 226,
                          "indexExpression": {
                            "expression": {
                              "id": 224,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2507:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2507:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2494:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listener_$31_storage",
                            "typeString": "struct Knack.Listener storage ref"
                          }
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songsPurchased",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "2494:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      }
                    ],
                    "id": 228,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2388:155:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "tuple(string storage ref,uint256,uint256[] storage ref)"
                    }
                  },
                  "functionReturnParameters": 212,
                  "id": 229,
                  "nodeType": "Return",
                  "src": "2381:162:0"
                }
              ]
            },
            "functionSelector": "4effb50e",
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getListenerDetails",
            "nameLocation": "2213:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2231:2:0"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "2292:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2292:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "2319:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2319:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "2340:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 209,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2340:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 210,
                    "nodeType": "ArrayTypeName",
                    "src": "2340:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2278:88:0"
            },
            "scope": 610,
            "src": "2204:346:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "2721:171:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 241,
                            "name": "allArtists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "2752:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$19_storage_$",
                              "typeString": "mapping(address => struct Knack.Artist storage ref)"
                            }
                          },
                          "id": 244,
                          "indexExpression": {
                            "expression": {
                              "id": 242,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2763:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2763:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2752:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Artist_$19_storage",
                            "typeString": "struct Knack.Artist storage ref"
                          }
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "2752:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 246,
                            "name": "allArtists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "2793:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$19_storage_$",
                              "typeString": "mapping(address => struct Knack.Artist storage ref)"
                            }
                          },
                          "id": 249,
                          "indexExpression": {
                            "expression": {
                              "id": 247,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2804:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2804:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2793:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Artist_$19_storage",
                            "typeString": "struct Knack.Artist storage ref"
                          }
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "artistID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15,
                        "src": "2793:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 251,
                            "name": "allArtists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "2838:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$19_storage_$",
                              "typeString": "mapping(address => struct Knack.Artist storage ref)"
                            }
                          },
                          "id": 254,
                          "indexExpression": {
                            "expression": {
                              "id": 252,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2849:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2849:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2838:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Artist_$19_storage",
                            "typeString": "struct Knack.Artist storage ref"
                          }
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songsPublished",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "2838:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      }
                    ],
                    "id": 256,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2738:147:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "tuple(string storage ref,uint256,uint256[] storage ref)"
                    }
                  },
                  "functionReturnParameters": 240,
                  "id": 257,
                  "nodeType": "Return",
                  "src": "2731:154:0"
                }
              ]
            },
            "functionSelector": "7f7a4510",
            "id": 259,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getArtistDetails",
            "nameLocation": "2565:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2581:2:0"
            },
            "returnParameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "2642:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "2669:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2669:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "2690:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 237,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2690:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 238,
                    "nodeType": "ArrayTypeName",
                    "src": "2690:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2628:88:0"
            },
            "scope": 610,
            "src": "2556:336:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "8c6d5283b06a4f84805865678e0a51043ab4788bdd609db7c5cbe4c6fce5c97f",
            "id": 269,
            "name": "songAdded",
            "nameLocation": "2923:9:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "songID",
                  "nameLocation": "2950:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "2942:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2942:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 263,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "songName",
                  "nameLocation": "2973:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "2966:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2966:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 265,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "artistName",
                  "nameLocation": "2998:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "2991:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2991:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 267,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "3026:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "3018:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3018:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2932:105:0"
            },
            "src": "2917:121:0"
          },
          {
            "body": {
              "id": 395,
              "nodeType": "Block",
              "src": "3186:848:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_UserType_$11",
                          "typeString": "enum Knack.UserType"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 281,
                            "name": "identifyUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "3204:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserType_$11_$",
                              "typeString": "mapping(address => enum Knack.UserType)"
                            }
                          },
                          "id": 284,
                          "indexExpression": {
                            "expression": {
                              "id": 282,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3217:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3217:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3204:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserType_$11",
                            "typeString": "enum Knack.UserType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 285,
                            "name": "UserType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3232:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_UserType_$11_$",
                              "typeString": "type(enum Knack.UserType)"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ARTIST",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9,
                          "src": "3232:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserType_$11",
                            "typeString": "enum Knack.UserType"
                          }
                        },
                        "src": "3204:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616e206172746973742e",
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3249:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c2a2c55151697061ce1df6c55c874e20efd6df64d62288c126c45f45b39e7dd",
                          "typeString": "literal_string \"Not an artist.\""
                        },
                        "value": "Not an artist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c2a2c55151697061ce1df6c55c874e20efd6df64d62288c126c45f45b39e7dd",
                          "typeString": "literal_string \"Not an artist.\""
                        }
                      ],
                      "id": 280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3196:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3196:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "3196:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3284:20:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 292,
                            "name": "songHashUsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "3285:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 294,
                          "indexExpression": {
                            "id": 293,
                            "name": "_hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "3298:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3285:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4475706c6963617465206861736820686173206265656e2064657465637465642e",
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3306:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56ab5ac995d8d22b9db30e24405fe75a02abc80b941eede0f4484baa6dae0783",
                          "typeString": "literal_string \"Duplicate hash has been detected.\""
                        },
                        "value": "Duplicate hash has been detected."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56ab5ac995d8d22b9db30e24405fe75a02abc80b941eede0f4484baa6dae0783",
                          "typeString": "literal_string \"Duplicate hash has been detected.\""
                        }
                      ],
                      "id": 291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3276:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3276:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "3276:66:0"
                },
                {
                  "expression": {
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 299,
                      "name": "songIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "3353:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3370:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3353:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "3353:18:0"
                },
                {
                  "assignments": [
                    305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 305,
                      "mutability": "mutable",
                      "name": "newSong",
                      "nameLocation": "3394:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 395,
                      "src": "3382:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                        "typeString": "struct Knack.Song"
                      },
                      "typeName": {
                        "id": 304,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 303,
                          "name": "Song",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46,
                          "src": "3382:4:0"
                        },
                        "referencedDeclaration": 46,
                        "src": "3382:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_storage_ptr",
                          "typeString": "struct Knack.Song"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 306,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3382:19:0"
                },
                {
                  "expression": {
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 307,
                        "name": "newSong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "3411:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                          "typeString": "struct Knack.Song memory"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "songID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "3411:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 310,
                      "name": "songIDTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "3428:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3411:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "3411:30:0"
                },
                {
                  "expression": {
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 313,
                        "name": "newSong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "3451:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                          "typeString": "struct Knack.Song memory"
                        }
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "songName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "3451:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 316,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "3470:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3451:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "3451:24:0"
                },
                {
                  "expression": {
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 319,
                        "name": "newSong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "3485:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                          "typeString": "struct Knack.Song memory"
                        }
                      },
                      "id": 321,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "artistName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "3485:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 322,
                          "name": "allArtists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "3506:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$19_storage_$",
                            "typeString": "mapping(address => struct Knack.Artist storage ref)"
                          }
                        },
                        "id": 325,
                        "indexExpression": {
                          "expression": {
                            "id": 323,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3517:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3517:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3506:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Artist_$19_storage",
                          "typeString": "struct Knack.Artist storage ref"
                        }
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "3506:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "3485:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "3485:48:0"
                },
                {
                  "expression": {
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 329,
                        "name": "newSong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "3543:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                          "typeString": "struct Knack.Song memory"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "genre",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "3543:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 332,
                      "name": "_genre",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "3559:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3543:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "3543:22:0"
                },
                {
                  "expression": {
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 335,
                        "name": "newSong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "3575:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                          "typeString": "struct Knack.Song memory"
                        }
                      },
                      "id": 337,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "3575:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 338,
                      "name": "_hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "3590:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3575:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "3575:20:0"
                },
                {
                  "expression": {
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 341,
                        "name": "newSong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "3605:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                          "typeString": "struct Knack.Song memory"
                        }
                      },
                      "id": 343,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "3605:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 344,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "3621:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3605:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "3605:22:0"
                },
                {
                  "expression": {
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 347,
                        "name": "newSong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "3637:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                          "typeString": "struct Knack.Song memory"
                        }
                      },
                      "id": 349,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "artistAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "3637:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 352,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3669:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3669:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3661:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3661:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3661:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3637:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "3637:43:0"
                },
                {
                  "expression": {
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 357,
                        "name": "timesSongPurchased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "3691:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 359,
                      "indexExpression": {
                        "id": 358,
                        "name": "songIDTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3710:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3691:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3727:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3691:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "3691:37:0"
                },
                {
                  "expression": {
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 363,
                        "name": "allSongs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "3739:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
                          "typeString": "mapping(uint256 => struct Knack.Song storage ref)"
                        }
                      },
                      "id": 365,
                      "indexExpression": {
                        "id": 364,
                        "name": "songIDTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3748:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3739:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Song_$46_storage",
                        "typeString": "struct Knack.Song storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 366,
                      "name": "newSong",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "3765:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                        "typeString": "struct Knack.Song memory"
                      }
                    },
                    "src": "3739:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Song_$46_storage",
                      "typeString": "struct Knack.Song storage ref"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "3739:33:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 375,
                        "name": "songIDTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3825:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 369,
                            "name": "allArtists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "3782:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$19_storage_$",
                              "typeString": "mapping(address => struct Knack.Artist storage ref)"
                            }
                          },
                          "id": 372,
                          "indexExpression": {
                            "expression": {
                              "id": 370,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3793:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3793:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3782:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Artist_$19_storage",
                            "typeString": "struct Knack.Artist storage ref"
                          }
                        },
                        "id": 373,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songsPublished",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "3782:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3782:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3782:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "3782:57:0"
                },
                {
                  "expression": {
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 378,
                        "name": "songHashUsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "3849:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 380,
                      "indexExpression": {
                        "id": 379,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "3862:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3849:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3871:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3849:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "3849:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 385,
                          "name": "newSong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "3914:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                            "typeString": "struct Knack.Song memory"
                          }
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41,
                        "src": "3914:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 387,
                          "name": "newSong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "3942:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                            "typeString": "struct Knack.Song memory"
                          }
                        },
                        "id": 388,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33,
                        "src": "3942:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 389,
                          "name": "newSong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "3972:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                            "typeString": "struct Knack.Song memory"
                          }
                        },
                        "id": 390,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "artistName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35,
                        "src": "3972:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 391,
                          "name": "newSong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "4004:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                            "typeString": "struct Knack.Song memory"
                          }
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "4004:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 384,
                      "name": "songAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "3891:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,string memory,string memory,uint256)"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3891:136:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "EmitStatement",
                  "src": "3886:141:0"
                }
              ]
            },
            "functionSelector": "f29b4165",
            "id": 396,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSong",
            "nameLocation": "3053:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3084:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "3070:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3070:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 273,
                  "mutability": "mutable",
                  "name": "_genre",
                  "nameLocation": "3113:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "3099:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3099:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "3143:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "3129:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3129:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "3166:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "3158:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3158:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3060:118:0"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3186:0:0"
            },
            "scope": 610,
            "src": "3044:990:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "4d5d3c0b738fd8f4b26fa11966a64c4b072cb5837aadaf02808df71f883a5d51",
            "id": 406,
            "name": "songPurchased",
            "nameLocation": "4062:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "songID",
                  "nameLocation": "4093:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4085:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4085:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 400,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "songName",
                  "nameLocation": "4116:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4109:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4109:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 402,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listenerName",
                  "nameLocation": "4141:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4134:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4134:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "4171:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4163:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4163:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4075:107:0"
            },
            "src": "4056:127:0"
          },
          {
            "body": {
              "id": 511,
              "nodeType": "Block",
              "src": "4238:958:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_UserType_$11",
                          "typeString": "enum Knack.UserType"
                        },
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 412,
                            "name": "identifyUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "4269:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserType_$11_$",
                              "typeString": "mapping(address => enum Knack.UserType)"
                            }
                          },
                          "id": 415,
                          "indexExpression": {
                            "expression": {
                              "id": 413,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4282:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4282:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4269:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserType_$11",
                            "typeString": "enum Knack.UserType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 416,
                            "name": "UserType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "4297:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_UserType_$11_$",
                              "typeString": "type(enum Knack.UserType)"
                            }
                          },
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "LISTENER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "4297:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserType_$11",
                            "typeString": "enum Knack.UserType"
                          }
                        },
                        "src": "4269:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061206c697374656e65722070726f66696c652e",
                        "id": 419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4328:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9",
                          "typeString": "literal_string \"Not a listener profile.\""
                        },
                        "value": "Not a listener profile."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9",
                          "typeString": "literal_string \"Not a listener profile.\""
                        }
                      ],
                      "id": 411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4248:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4248:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 421,
                  "nodeType": "ExpressionStatement",
                  "src": "4248:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4394:50:0",
                        "subExpression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 423,
                                "name": "allListeners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61,
                                "src": "4395:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                                  "typeString": "mapping(address => struct Knack.Listener storage ref)"
                                }
                              },
                              "id": 426,
                              "indexExpression": {
                                "expression": {
                                  "id": 424,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4408:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4408:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4395:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Listener_$31_storage",
                                "typeString": "struct Knack.Listener storage ref"
                              }
                            },
                            "id": 427,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isSongPurchased",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "4395:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 429,
                          "indexExpression": {
                            "id": 428,
                            "name": "_songID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 408,
                            "src": "4436:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4395:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f6e6720616c7265616479207075726368617365642e",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4458:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_05aed2d161079a02033540553bee7e5fd7458a6772cb0cc85a08e034153194d8",
                          "typeString": "literal_string \"Song already purchased.\""
                        },
                        "value": "Song already purchased."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_05aed2d161079a02033540553bee7e5fd7458a6772cb0cc85a08e034153194d8",
                          "typeString": "literal_string \"Song already purchased.\""
                        }
                      ],
                      "id": 422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4373:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4373:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "4373:120:0"
                },
                {
                  "assignments": [
                    436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 436,
                      "mutability": "mutable",
                      "name": "curSong",
                      "nameLocation": "4516:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 511,
                      "src": "4504:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                        "typeString": "struct Knack.Song"
                      },
                      "typeName": {
                        "id": 435,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 434,
                          "name": "Song",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46,
                          "src": "4504:4:0"
                        },
                        "referencedDeclaration": 46,
                        "src": "4504:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Song_$46_storage_ptr",
                          "typeString": "struct Knack.Song"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 440,
                  "initialValue": {
                    "baseExpression": {
                      "id": 437,
                      "name": "allSongs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "4526:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
                        "typeString": "mapping(uint256 => struct Knack.Song storage ref)"
                      }
                    },
                    "id": 439,
                    "indexExpression": {
                      "id": 438,
                      "name": "_songID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "4535:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4526:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Song_$46_storage",
                      "typeString": "struct Knack.Song storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4504:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 442,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4575:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4575:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 444,
                                  "name": "curSong",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 436,
                                  "src": "4589:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                                    "typeString": "struct Knack.Song memory"
                                  }
                                },
                                "id": 445,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 43,
                                "src": "4589:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4605:5:0",
                                "subdenomination": "wei",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "4589:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 448,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4588:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4575:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420706179656420646f6573206e6f74206d61746368207072696365206f662074686520736f6e672e",
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4625:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_503763d64011defe79f0d5161c938235b522eb0e0e6f987bd08b88e3af5a03dd",
                          "typeString": "literal_string \"Amount payed does not match price of the song.\""
                        },
                        "value": "Amount payed does not match price of the song."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_503763d64011defe79f0d5161c938235b522eb0e0e6f987bd08b88e3af5a03dd",
                          "typeString": "literal_string \"Amount payed does not match price of the song.\""
                        }
                      ],
                      "id": 441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4554:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4554:129:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "4554:129:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 454,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4714:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4714:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "4714:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 457,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4735:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4735:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4714:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e636520746f2070726f636565642e",
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4758:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a",
                          "typeString": "literal_string \"Insufficient balance to proceed.\""
                        },
                        "value": "Insufficient balance to proceed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a",
                          "typeString": "literal_string \"Insufficient balance to proceed.\""
                        }
                      ],
                      "id": 453,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4693:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4693:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "4693:109:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 468,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4844:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "4844:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 463,
                          "name": "curSong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 436,
                          "src": "4813:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                            "typeString": "struct Knack.Song memory"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "artistAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45,
                        "src": "4813:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4813:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4813:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "4813:41:0"
                },
                {
                  "expression": {
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 472,
                        "name": "timesSongPurchased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "4864:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 474,
                      "indexExpression": {
                        "id": 473,
                        "name": "_songID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "4883:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4864:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4895:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4864:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "4864:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 484,
                        "name": "_songID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "4952:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 478,
                            "name": "allListeners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "4907:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                              "typeString": "mapping(address => struct Knack.Listener storage ref)"
                            }
                          },
                          "id": 481,
                          "indexExpression": {
                            "expression": {
                              "id": 479,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4920:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4920:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4907:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listener_$31_storage",
                            "typeString": "struct Knack.Listener storage ref"
                          }
                        },
                        "id": 482,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songsPurchased",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "4907:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4907:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4907:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "4907:53:0"
                },
                {
                  "expression": {
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 487,
                            "name": "allListeners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "4970:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                              "typeString": "mapping(address => struct Knack.Listener storage ref)"
                            }
                          },
                          "id": 490,
                          "indexExpression": {
                            "expression": {
                              "id": 488,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4983:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4983:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4970:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listener_$31_storage",
                            "typeString": "struct Knack.Listener storage ref"
                          }
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSongPurchased",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "4970:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 493,
                      "indexExpression": {
                        "id": 492,
                        "name": "_songID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "5011:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4970:49:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5022:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4970:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 496,
                  "nodeType": "ExpressionStatement",
                  "src": "4970:56:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 498,
                          "name": "curSong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 436,
                          "src": "5069:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                            "typeString": "struct Knack.Song memory"
                          }
                        },
                        "id": 499,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41,
                        "src": "5069:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 500,
                          "name": "curSong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 436,
                          "src": "5097:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_memory_ptr",
                            "typeString": "struct Knack.Song memory"
                          }
                        },
                        "id": 501,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33,
                        "src": "5097:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 502,
                            "name": "allListeners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "5127:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                              "typeString": "mapping(address => struct Knack.Listener storage ref)"
                            }
                          },
                          "id": 505,
                          "indexExpression": {
                            "expression": {
                              "id": 503,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5140:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5140:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5127:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listener_$31_storage",
                            "typeString": "struct Knack.Listener storage ref"
                          }
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "5127:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 507,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5170:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "5170:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 497,
                      "name": "songPurchased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 406,
                      "src": "5042:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,string memory,string memory,uint256)"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5042:147:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 510,
                  "nodeType": "EmitStatement",
                  "src": "5037:152:0"
                }
              ]
            },
            "functionSelector": "606a0175",
            "id": 512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buySong",
            "nameLocation": "4198:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "_songID",
                  "nameLocation": "4214:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "4206:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4206:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4205:17:0"
            },
            "returnParameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4238:0:0"
            },
            "scope": 610,
            "src": "4189:1007:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "19fc7073cff31b76fe0bf3c801e7fe11652310c62d0c225a9995a5d30940c648",
            "id": 520,
            "name": "artistDonated",
            "nameLocation": "5242:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "artistName",
                  "nameLocation": "5263:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "5256:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5256:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listenerName",
                  "nameLocation": "5282:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "5275:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5275:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5304:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "5296:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5296:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5255:56:0"
            },
            "src": "5236:76:0"
          },
          {
            "body": {
              "id": 565,
              "nodeType": "Block",
              "src": "5381:439:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_UserType_$11",
                          "typeString": "enum Knack.UserType"
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 526,
                            "name": "identifyUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "5412:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserType_$11_$",
                              "typeString": "mapping(address => enum Knack.UserType)"
                            }
                          },
                          "id": 529,
                          "indexExpression": {
                            "expression": {
                              "id": 527,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5425:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5425:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5412:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserType_$11",
                            "typeString": "enum Knack.UserType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 530,
                            "name": "UserType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "5440:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_UserType_$11_$",
                              "typeString": "type(enum Knack.UserType)"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "LISTENER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "5440:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserType_$11",
                            "typeString": "enum Knack.UserType"
                          }
                        },
                        "src": "5412:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061206c697374656e65722070726f66696c652e",
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5471:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9",
                          "typeString": "literal_string \"Not a listener profile.\""
                        },
                        "value": "Not a listener profile."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86a09118ffcb62f7ea1a67896645d8204ebd1cca221b96f9ac3e6e0fd9a7ebf9",
                          "typeString": "literal_string \"Not a listener profile.\""
                        }
                      ],
                      "id": 525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5391:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5391:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "5391:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 537,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5537:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5537:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "5537:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 540,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5558:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5558:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5537:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e636520746f2070726f636565642e",
                        "id": 543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5581:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a",
                          "typeString": "literal_string \"Insufficient balance to proceed.\""
                        },
                        "value": "Insufficient balance to proceed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ef922b96f52f5c0359b6bf70580c1a185c819c7a7d5c7aaae9ce102dabab80a",
                          "typeString": "literal_string \"Insufficient balance to proceed.\""
                        }
                      ],
                      "id": 536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5516:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5516:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "5516:109:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 550,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5674:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "5674:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 546,
                          "name": "getArtistAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "5636:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_payable_$",
                            "typeString": "mapping(string memory => address payable)"
                          }
                        },
                        "id": 548,
                        "indexExpression": {
                          "id": 547,
                          "name": "artistName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "5653:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5636:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5636:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5636:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "5636:48:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 555,
                        "name": "artistName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "5727:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 556,
                            "name": "allListeners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "5751:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Listener_$31_storage_$",
                              "typeString": "mapping(address => struct Knack.Listener storage ref)"
                            }
                          },
                          "id": 559,
                          "indexExpression": {
                            "expression": {
                              "id": 557,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5764:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5764:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5751:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listener_$31_storage",
                            "typeString": "struct Knack.Listener storage ref"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "5751:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 561,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5794:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "5794:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 554,
                      "name": "artistDonated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "5700:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256)"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5700:113:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 564,
                  "nodeType": "EmitStatement",
                  "src": "5695:118:0"
                }
              ]
            },
            "functionSelector": "dc4b0291",
            "id": 566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "donateArtist",
            "nameLocation": "5327:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "artistName",
                  "nameLocation": "5354:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 566,
                  "src": "5340:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5340:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5339:26:0"
            },
            "returnParameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5381:0:0"
            },
            "scope": 610,
            "src": "5318:502:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 608,
              "nodeType": "Block",
              "src": "6102:267:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 583,
                            "name": "allSongs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "6133:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
                              "typeString": "mapping(uint256 => struct Knack.Song storage ref)"
                            }
                          },
                          "id": 585,
                          "indexExpression": {
                            "id": 584,
                            "name": "_songID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "6142:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6133:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_storage",
                            "typeString": "struct Knack.Song storage ref"
                          }
                        },
                        "id": 586,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "songName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33,
                        "src": "6133:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 587,
                            "name": "allSongs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "6173:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
                              "typeString": "mapping(uint256 => struct Knack.Song storage ref)"
                            }
                          },
                          "id": 589,
                          "indexExpression": {
                            "id": 588,
                            "name": "_songID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "6182:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6173:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_storage",
                            "typeString": "struct Knack.Song storage ref"
                          }
                        },
                        "id": 590,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "artistName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35,
                        "src": "6173:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 591,
                            "name": "allSongs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "6215:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
                              "typeString": "mapping(uint256 => struct Knack.Song storage ref)"
                            }
                          },
                          "id": 593,
                          "indexExpression": {
                            "id": 592,
                            "name": "_songID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "6224:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6215:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_storage",
                            "typeString": "struct Knack.Song storage ref"
                          }
                        },
                        "id": 594,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "genre",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37,
                        "src": "6215:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 595,
                            "name": "allSongs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "6252:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
                              "typeString": "mapping(uint256 => struct Knack.Song storage ref)"
                            }
                          },
                          "id": 597,
                          "indexExpression": {
                            "id": 596,
                            "name": "_songID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "6261:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6252:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_storage",
                            "typeString": "struct Knack.Song storage ref"
                          }
                        },
                        "id": 598,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39,
                        "src": "6252:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 599,
                            "name": "allSongs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "6288:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$46_storage_$",
                              "typeString": "mapping(uint256 => struct Knack.Song storage ref)"
                            }
                          },
                          "id": 601,
                          "indexExpression": {
                            "id": 600,
                            "name": "_songID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "6297:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6288:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Song_$46_storage",
                            "typeString": "struct Knack.Song storage ref"
                          }
                        },
                        "id": 602,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "6288:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 603,
                          "name": "timesSongPurchased",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "6325:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 605,
                        "indexExpression": {
                          "id": 604,
                          "name": "_songID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 568,
                          "src": "6344:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6325:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 606,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6119:243:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(string storage ref,string storage ref,string storage ref,string storage ref,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 582,
                  "id": 607,
                  "nodeType": "Return",
                  "src": "6112:250:0"
                }
              ]
            },
            "functionSelector": "77822fc2",
            "id": 609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSongDetails",
            "nameLocation": "5861:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 568,
                  "mutability": "mutable",
                  "name": "_songID",
                  "nameLocation": "5884:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "5876:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5876:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5875:17:0"
            },
            "returnParameters": {
              "id": 582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 571,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "5951:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5951:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 573,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "5978:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5978:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 575,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "6005:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6005:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 577,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "6032:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6032:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 579,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "6059:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6059:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 581,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "6080:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6080:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5937:160:0"
            },
            "scope": 610,
            "src": "5852:517:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 611,
        "src": "66:6305:0",
        "usedErrors": []
      }
    ],
    "src": "32:6340:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "1648358449107": {
      "events": {},
      "links": {},
      "address": "0xCD9445f8617D404a7e4DD676033E222623b42a10",
      "transactionHash": "0x5d9483eace430aa21a4f6c0f76d7191c56237e6a136b8e9067713f93a1898f63"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-03-27T05:21:03.683Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}